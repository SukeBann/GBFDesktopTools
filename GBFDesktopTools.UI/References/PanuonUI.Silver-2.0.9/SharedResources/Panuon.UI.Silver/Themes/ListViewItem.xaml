<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/InternalResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Resources.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <ControlTemplate x:Key="{x:Static i:ResourceKeys.ListViewItemStandardTemplate}"
                     TargetType="ListViewItem">
        <Border x:Name="BdrMain"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                CornerRadius="{Binding Path=(local:ListViewHelper.ItemCornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
            <GridViewRowPresenter 
                                  Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.ItemHoverBackground),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrMain"
                        Property="Background"
                        Value="{Binding Path=(local:ListViewHelper.ItemHoverBackground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.ItemHoverBorderBrush),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrMain"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:ListViewHelper.ItemHoverBorderBrush),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.ItemSelectedBackground),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrMain"
                        Property="Background"
                        Value="{Binding Path=(local:ListViewHelper.ItemSelectedBackground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.ItemSelectedBorderBrush),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrMain"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:ListViewHelper.ItemSelectedBorderBrush),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ListViewItem">
        <Setter Property="local:ListViewHelper.ItemCornerRadius"
                Value="{Binding Path=(local:ListViewHelper.ItemsCornerRadius), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemHoverBackground"
                Value="{Binding Path=(local:ListViewHelper.ItemsHoverBackground), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemHoverBorderBrush"
                Value="{Binding Path=(local:ListViewHelper.ItemsHoverBorderBrush), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemHoverForeground"
                Value="{Binding Path=(local:ListViewHelper.ItemsHoverForeground), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemSelectedBackground"
                Value="{Binding Path=(local:ListViewHelper.ItemsSelectedBackground), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemSelectedBorderBrush"
                Value="{Binding Path=(local:ListViewHelper.ItemsSelectedBorderBrush), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemSelectedForeground"
                Value="{Binding Path=(local:ListViewHelper.ItemsSelectedForeground), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemIcon"
                Value="{Binding Path=(local:ListViewHelper.ItemsIcon), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="Foreground"
                Value="{Binding Path=(local:ListViewHelper.ItemsForeground), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="Background"
                Value="{Binding Path=(local:ListViewHelper.ItemsBackground), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="BorderBrush"
                Value="{Binding Path=(local:ListViewHelper.ItemsBorderBrush), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="Height"
                Value="{Binding Path=(local:ListViewHelper.ItemsHeight), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static i:ResourceKeys.ListViewItemStandardTemplate}}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.ItemSelectedForeground),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:ListViewHelper.ItemSelectedForeground),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.ItemHoverForeground),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:ListViewHelper.ItemHoverForeground),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{DynamicResource {x:Static rs:ResourceKeys.DisabledOpacity}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
