<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/InternalResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Resources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Themes/Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Static rs:ResourceKeys.TextBoxWaitingLoadingStyle}"
           TargetType="{x:Type local:Loading}"
           BasedOn="{StaticResource {x:Type local:Loading}}">
        <Setter Property="Height"
                Value="{Binding FontSize, Converter={StaticResource {x:Static rs:Converters.DoublePlusConverter}}, ConverterParameter=5,RelativeSource={RelativeSource  AncestorType=TextBox},Mode=OneWay}" />
        <Setter Property="Width"
                Value="{Binding FontSize, Converter={StaticResource {x:Static rs:Converters.DoublePlusConverter}}, ConverterParameter=5,RelativeSource={RelativeSource  AncestorType=TextBox},Mode=OneWay}" />
        <Setter Property="Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}" />
    </Style>

    <Style x:Key="{x:Static rs:ResourceKeys.TextBoxClearButtonStyle}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontFamily"
                Value="pack://application:,,,/Panuon.UI.Silver;component/Resources/#PanuonIcon" />
        <Setter Property="Content"
                Value="&#xe92d;" />
        <Setter Property="local:ButtonHelper.ButtonStyle"
                Value="Link" />
        <Setter Property="Width"
                Value="{Binding ActualHeight,Converter={StaticResource {x:Static rs:Converters.DoubleMinusConverter}}, ConverterParameter=5,RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}" />
        <Setter Property="Height"
                Value="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}" />
        <Style.Triggers>
            <Trigger Property="local:ButtonHelper.ButtonStyle"
                     Value="Link">
                <Setter Property="Foreground"
                        Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}" />
                <Setter Property="local:ButtonHelper.HoverBrush"
                        Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{x:Static i:ResourceKeys.TextBoxTemplate}"
                     TargetType="{x:Type TextBox}">
        <Grid x:Name="GrdMain">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border x:Name="BdrBorder"
                    Grid.ColumnSpan="3"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    CornerRadius="{Binding Path=(local:TextBoxHelper.CornerRadius),RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}">
                <Border.Effect>
                    <DropShadowEffect x:Name="DseShadow"
                                      BlurRadius="0"
                                      ShadowDepth="0"
                                      Opacity="0.6"
                                      Color="{Binding Path=(local:TextBoxHelper.FocusedShadowColor), Converter={StaticResource {x:Static i:ResourceKeys.NullableColorToColorConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                </Border.Effect>
            </Border>
            <ic:IconControl x:Name="IcIcon"
                            Width="{Binding Path=(local:IconHelper.Width),RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                            Height="{Binding Path=(local:IconHelper.Height),RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                            MinWidth="{Binding Path=(local:IconHelper.MinWidth),RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                            MinHeight="{Binding Path=(local:IconHelper.MinHeight),RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                            MaxWidth="{Binding Path=(local:IconHelper.MaxWidth),RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                            MaxHeight="{Binding Path=(local:IconHelper.MaxHeight),RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                            Margin="{Binding Path=(local:IconHelper.Margin),RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                            Visibility="{Binding Path=(local:TextBoxHelper.Icon),Converter={StaticResource {x:Static i:ResourceKeys.NullToCollapseConverter}},RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                            Content="{Binding Path=(local:TextBoxHelper.Icon),RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                            Foreground="{Binding Path=(local:IconHelper.Foreground),RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                            FontFamily="{Binding Path=(local:IconHelper.FontFamily),RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                            FontSize="{Binding Path=(local:IconHelper.FontSize),RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" />
            <ScrollViewer x:Name="PART_ContentHost"
                          Grid.Column="1"
                          VerticalAlignment="Stretch"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                          HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" />
            <TextBlock  x:Name="TxtWatermark"
                        Grid.Column="1"
                        Margin="{TemplateBinding Padding}"
                        Padding="1,0,0,0"
                        IsHitTestVisible="False"
                        Visibility="{Binding Text,Converter={StaticResource {x:Static i:ResourceKeys.NullOrEmptyToVisibleConverter}},RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                        Text="{Binding Path=(local:TextBoxHelper.Watermark),RelativeSource={RelativeSource AncestorType=TextBox}, Mode=OneWay}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Opacity="0.6" />
            <Button x:Name="BtnClear"
                    Padding="0,0,0,2"
                    Command="{Binding Path=(local:TextBoxHelper.ClearTextBoxCommand),RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                    CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                    Grid.Column="2"
                    Style="{DynamicResource {x:Static rs:ResourceKeys.TextBoxClearButtonStyle}}"
                    Visibility="{Binding Path=(local:TextBoxHelper.CanClear),Converter={StaticResource {x:Static rs:Converters.TrueToVisibleConverter}},RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}" />
            <Border x:Name="BdrWait"
                    
                    Grid.Column="2"
                    Width="{Binding ActualHeight,Converter={StaticResource {x:Static rs:Converters.DoubleMinusConverter}}, ConverterParameter=5,RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                    Height="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                    Visibility="Collapsed">
                <local:Loading x:Name="LoadWait"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Style="{StaticResource {x:Static rs:ResourceKeys.TextBoxWaitingLoadingStyle}}" />
            </Border>
            <Grid x:Name="GrdError"
                  Grid.Column="2"
                  Width="{Binding ActualHeight,Converter={StaticResource {x:Static rs:Converters.DoubleMinusConverter}}, ConverterParameter=5,RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                  Height="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                  Visibility="Collapsed">
                <Ellipse Width="{Binding FontSize,Converter={StaticResource {x:Static rs:Converters.DoublePlusConverter}}, ConverterParameter=7,RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                         Height="{Binding FontSize,Converter={StaticResource {x:Static rs:Converters.DoublePlusConverter}}, ConverterParameter=7,RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}"
                         Margin="0,0,0,2"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center"
                         Fill="{DynamicResource {x:Static rs:ResourceKeys.TextBoxValidationErrorBrush}}" />
                <TextBlock Margin="0,0,0,2"
                           Text="&#xe92d;"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="White"
                           FontFamily="pack://application:,,,/Panuon.UI.Silver;component/Resources/#PanuonIcon" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(local:TextBoxHelper.FocusedShadowColor), Converter={StaticResource {x:Static i:ResourceKeys.IsNullConverter}}, RelativeSource={RelativeSource Self}}"
                         Value="True">
                <Setter TargetName="BdrBorder"
                        Property="Effect"
                        Value="{x:Null}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TextBoxHelper.FocusedShadowColor), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DseShadow"
                                             Storyboard.TargetProperty="BlurRadius"
                                             To="5"
                                             Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DseShadow"
                                             Storyboard.TargetProperty="BlurRadius"
                                             Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(local:TextBoxHelper.ValidationErrorTips),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}}"
                         Value="True">
                <Setter TargetName="BdrBorder"
                        Property="BorderBrush"
                        Value="{DynamicResource {x:Static rs:ResourceKeys.TextBoxValidationErrorBrush}}" />
                <Setter TargetName="GrdError"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="GrdMain"
                        Property="ToolTip"
                        Value="{Binding Path=(local:TextBoxHelper.ValidationErrorTips),RelativeSource={RelativeSource AncestorType=TextBox}, Mode=OneWay}" />
            </DataTrigger>
            <Trigger Property="local:TextBoxHelper.IsWaiting"
                     Value="True">
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="BdrWait"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="LoadWait"
                        Property="IsLoading"
                        Value="True" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type TextBox}">
        <!--TextBoxHelper-->
        <Setter Property="local:TextBoxHelper.FocusedShadowColor"
                Value="{StaticResource {x:Static i:ResourceKeys.TextBoxFocusedShadowColor}}" />
        <Setter Property="local:TextBoxHelper.FocusedBorderBrush"
                Value="{StaticResource {x:Static i:ResourceKeys.TextBoxFocusedBorderBrush}}" />
        <Setter Property="local:TextBoxHelper.CornerRadius"
                Value="{StaticResource {x:Static i:ResourceKeys.TextBoxCornerRadius}}" />
        <!--IconHelper-->
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Self}}" />
        <!--Property-->
        <Setter Property="BorderBrush"
                Value="{StaticResource {x:Static i:ResourceKeys.TextBoxBorderBrush}}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource {x:Static i:ResourceKeys.TextBoxBorderThickness}}" />
        <Setter Property="Padding"
                Value="5,0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalScrollBarVisibility"
                Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Disabled" />
        <Setter Property="local:ScrollViewerHelper.ScrollBarThickness"
                Value="8" />
        <Setter Property="local:ScrollViewerHelper.ScrollBarCornerRadius"
                Value="4" />
        <Setter Property="local:IconHelper.Margin"
                Value="7,0,0,0" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static i:ResourceKeys.TextBoxTemplate}}" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <AdornedElementPlaceholder x:Name="controlWithError" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError"
                     Value="True">
                <Setter Property="local:TextBoxHelper.ValidationErrorTips"
                        Value="{Binding Path=(Validation.Errors)[0].ErrorContent,RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TextBoxHelper.FocusedCaretBrush), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="CaretBrush"
                        Value="{Binding Path=(local:TextBoxHelper.FocusedCaretBrush),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{StaticResource {x:Static rs:ResourceKeys.DisabledOpacity}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
