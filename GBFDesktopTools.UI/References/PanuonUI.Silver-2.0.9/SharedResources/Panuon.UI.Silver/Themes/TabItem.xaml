<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Resources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/InternalResources.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <ControlTemplate x:Key="{x:Static i:ResourceKeys.TabItemStandardTemplate}"
                     TargetType="TabItem">
        <Grid x:Name="GrdMain"
              Background="Transparent">
            <Border x:Name="BdrBack"
                    Background="{TemplateBinding Background}"
                    BorderThickness="0,0,0,1"
                    BorderBrush="{TemplateBinding BorderBrush}" />
            <Grid Margin="{TemplateBinding Padding}"
                 >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}">
                    <ic:IconControl x:Name="IcIcon"
                                    Width="{Binding Path=(local:IconHelper.Width),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Height="{Binding Path=(local:IconHelper.Height),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    MinWidth="{Binding Path=(local:IconHelper.MinWidth),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    MinHeight="{Binding Path=(local:IconHelper.MinHeight),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    MaxWidth="{Binding Path=(local:IconHelper.MaxWidth),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    MaxHeight="{Binding Path=(local:IconHelper.MaxHeight),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Margin="{Binding Path=(local:IconHelper.Margin),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Visibility="{Binding Path=(local:TabControlHelper.ItemIcon),Converter={StaticResource {x:Static i:ResourceKeys.NullToCollapseConverter}},RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Content="{Binding Path=(local:TabControlHelper.ItemIcon),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Foreground="{Binding Path=(local:IconHelper.Foreground),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    FontFamily="{Binding Path=(local:IconHelper.FontFamily),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    FontSize="{Binding Path=(local:IconHelper.FontSize),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center" />
                    <ContentPresenter x:Name="CpHeader"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      TextBlock.Foreground="{Binding Path=(local:TabControlHelper.ItemForeground),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                      TextElement.Foreground="{Binding Path=(local:TabControlHelper.ItemForeground),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                      ContentSource="Header"
                                      RecognizesAccessKey="True" />
                </StackPanel>
                <Button x:Name="BtnRemove"
                        Grid.Column="1"
                        Style="{Binding Path=(local:TabControlHelper.RemoveButtonStyle), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}"
                        Visibility="{Binding Path=(local:TabControlHelper.ItemRemovable),Converter={StaticResource {x:Static rs:Converters.TrueToVisibleConverter}},RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                        Command="{Binding Path=(local:TabControlHelper.RemoveCommand), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource {x:Static i:ResourceKeys.CombineToArrayConverter}}">
                            <Binding Path="."
                                     RelativeSource="{RelativeSource AncestorType=TabItem}" />
                            <Binding Path="."
                                     RelativeSource="{RelativeSource AncestorType=TabControl}" />
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </Grid>
            <Rectangle x:Name="RectRibbon" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement"
                     Value="Top">
                <Setter TargetName="RectRibbon"
                        Property="Height"
                        Value="{Binding Path=(local:TabControlHelper.ItemRibbonThickness),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectRibbon"
                        Property="VerticalAlignment"
                        Value="Top" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="TabStripPlacement"
                               Value="Top" />
                    <Condition Property="IsSelected"
                               Value="True" />
                </MultiTrigger.Conditions>
                    <Setter TargetName="BdrBack"
                            Property="BorderThickness"
                            Value="1,1,1,0" />
            </MultiTrigger>
            <Trigger Property="TabStripPlacement"
                     Value="Bottom">
                <Setter TargetName="RectRibbon"
                        Property="Height"
                        Value="{Binding Path=(local:TabControlHelper.ItemRibbonThickness),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectRibbon"
                        Property="VerticalAlignment"
                        Value="Bottom" />
                <Setter TargetName="BdrBack"
                        Property="BorderThickness"
                        Value="0,1,0,0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="TabStripPlacement"
                               Value="Bottom" />
                    <Condition Property="IsSelected"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="BorderThickness"
                        Value="1,0,1,1" />
            </MultiTrigger>
            <Trigger Property="TabStripPlacement"
                     Value="Left">
                <Setter TargetName="RectRibbon"
                        Property="Width"
                        Value="{Binding Path=(local:TabControlHelper.ItemRibbonThickness),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectRibbon"
                        Property="HorizontalAlignment"
                        Value="Left" />
                <Setter TargetName="BdrBack"
                        Property="BorderThickness"
                        Value="0,0,1,0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="TabStripPlacement"
                               Value="Left" />
                    <Condition Property="IsSelected"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="BorderThickness"
                        Value="1,1,0,1" />
            </MultiTrigger>
            <Trigger Property="TabStripPlacement"
                     Value="Right">
                <Setter TargetName="RectRibbon"
                        Property="Width"
                        Value="{Binding Path=(local:TabControlHelper.ItemRibbonThickness),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectRibbon"
                        Property="HorizontalAlignment"
                        Value="Right" />
                <Setter TargetName="BdrBack"
                        Property="BorderThickness"
                        Value="1,0,0,0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="TabStripPlacement"
                               Value="Right" />
                    <Condition Property="IsSelected"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BdrBack"
                        Property="BorderThickness"
                        Value="0,1,1,1" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabControlHelper.ItemSelectedRibbonBrush),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="RectRibbon"
                        Property="Fill"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedRibbonBrush),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpHeader"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="CpHeader"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="BtnRemove"
                        Property="Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="IcIcon"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="IcIcon"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
           
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static i:ResourceKeys.TabItemCardTemplate}"
                     TargetType="TabItem">
        <Grid x:Name="GrdMain"
              Background="Transparent">
            <Border x:Name="BdrBack"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}" />
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}">
                    <ic:IconControl x:Name="IcIcon"
                                    Width="{Binding Path=(local:IconHelper.Width),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Height="{Binding Path=(local:IconHelper.Height),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    MinWidth="{Binding Path=(local:IconHelper.MinWidth),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    MinHeight="{Binding Path=(local:IconHelper.MinHeight),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    MaxWidth="{Binding Path=(local:IconHelper.MaxWidth),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    MaxHeight="{Binding Path=(local:IconHelper.MaxHeight),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Margin="{Binding Path=(local:IconHelper.Margin),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Visibility="{Binding Path=(local:TabControlHelper.ItemIcon),Converter={StaticResource {x:Static i:ResourceKeys.NullToCollapseConverter}},RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Content="{Binding Path=(local:TabControlHelper.ItemIcon),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Foreground="{Binding Path=(local:IconHelper.Foreground),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    FontFamily="{Binding Path=(local:IconHelper.FontFamily),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    FontSize="{Binding Path=(local:IconHelper.FontSize),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center" />
                    <ContentPresenter x:Name="CpHeader"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      TextBlock.Foreground="{Binding Path=(local:TabControlHelper.ItemForeground),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                      TextElement.Foreground="{Binding Path=(local:TabControlHelper.ItemForeground),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                      ContentSource="Header"
                                      RecognizesAccessKey="True"
                                      IsHitTestVisible="False" />
                </StackPanel>
                <Button x:Name="BtnRemove"
                        Grid.Column="1"
                        Style="{Binding Path=(local:TabControlHelper.RemoveButtonStyle), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}"
                        Visibility="{Binding Path=(local:TabControlHelper.ItemRemovable),Converter={StaticResource {x:Static rs:Converters.TrueToVisibleConverter}},RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                        Command="{Binding Path=(local:TabControlHelper.RemoveCommand), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource {x:Static i:ResourceKeys.CombineToArrayConverter}}">
                            <Binding Path="."
                                     RelativeSource="{RelativeSource AncestorType=TabItem}" />
                            <Binding Path="."
                                     RelativeSource="{RelativeSource AncestorType=TabControl}" />
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </Grid>
            <Rectangle x:Name="RectRibbon" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement"
                     Value="Top">
                <Setter TargetName="RectRibbon"
                        Property="Height"
                        Value="{Binding Path=(local:TabControlHelper.ItemRibbonThickness),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectRibbon"
                        Property="VerticalAlignment"
                        Value="Bottom" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Bottom">
                <Setter TargetName="RectRibbon"
                        Property="Height"
                        Value="{Binding Path=(local:TabControlHelper.ItemRibbonThickness),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectRibbon"
                        Property="VerticalAlignment"
                        Value="Top" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Left">
                <Setter TargetName="RectRibbon"
                        Property="Width"
                        Value="{Binding Path=(local:TabControlHelper.ItemRibbonThickness),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectRibbon"
                        Property="HorizontalAlignment"
                        Value="Right" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Right">
                <Setter TargetName="RectRibbon"
                        Property="Width"
                        Value="{Binding Path=(local:TabControlHelper.ItemRibbonThickness),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectRibbon"
                        Property="HorizontalAlignment"
                        Value="Left" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabControlHelper.ItemSelectedRibbonBrush),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="RectRibbon"
                        Property="Fill"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedRibbonBrush),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpHeader"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="CpHeader"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="BtnRemove"
                        Property="Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="IcIcon"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="IcIcon"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static i:ResourceKeys.TabItemModernTemplate}"
                     TargetType="TabItem">
        <Grid x:Name="GrdMain"
              Background="Transparent">
            <Border x:Name="BdrBack"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}" />
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"
                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}"
                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}">
                    <ic:IconControl x:Name="IcIcon"
                                    Width="{Binding Path=(local:IconHelper.Width),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Height="{Binding Path=(local:IconHelper.Height),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    MinWidth="{Binding Path=(local:IconHelper.MinWidth),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    MinHeight="{Binding Path=(local:IconHelper.MinHeight),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    MaxWidth="{Binding Path=(local:IconHelper.MaxWidth),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    MaxHeight="{Binding Path=(local:IconHelper.MaxHeight),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Margin="{Binding Path=(local:IconHelper.Margin),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Visibility="{Binding Path=(local:TabControlHelper.ItemIcon),Converter={StaticResource {x:Static i:ResourceKeys.NullToCollapseConverter}},RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Content="{Binding Path=(local:TabControlHelper.ItemIcon),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Foreground="{Binding Path=(local:IconHelper.Foreground),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    FontFamily="{Binding Path=(local:IconHelper.FontFamily),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    FontSize="{Binding Path=(local:IconHelper.FontSize),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center" />
                    <ContentPresenter x:Name="CpHeader"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      TextBlock.Foreground="{Binding Path=(local:TabControlHelper.ItemForeground),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                      TextElement.Foreground="{Binding Path=(local:TabControlHelper.ItemForeground),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                      ContentSource="Header"
                                      RecognizesAccessKey="True"
                                      IsHitTestVisible="False" />
                </StackPanel>
                <Button x:Name="BtnRemove"
                        Grid.Column="1"
                        Style="{Binding Path=(local:TabControlHelper.RemoveButtonStyle), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}"
                        Visibility="{Binding Path=(local:TabControlHelper.ItemRemovable),Converter={StaticResource {x:Static rs:Converters.TrueToVisibleConverter}},RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                        Command="{Binding Path=(local:TabControlHelper.RemoveCommand), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource {x:Static i:ResourceKeys.CombineToArrayConverter}}">
                            <Binding Path="."
                                     RelativeSource="{RelativeSource AncestorType=TabItem}" />
                            <Binding Path="."
                                     RelativeSource="{RelativeSource AncestorType=TabControl}" />
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </Grid>
            <Rectangle x:Name="RectRibbon" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement"
                     Value="Top">
                <Setter TargetName="RectRibbon"
                        Property="Height"
                        Value="{Binding Path=(local:TabControlHelper.ItemRibbonThickness),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectRibbon"
                        Property="VerticalAlignment"
                        Value="Top" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Bottom">
                <Setter TargetName="RectRibbon"
                        Property="Height"
                        Value="{Binding Path=(local:TabControlHelper.ItemRibbonThickness),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectRibbon"
                        Property="VerticalAlignment"
                        Value="Bottom" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Left">
                <Setter TargetName="RectRibbon"
                        Property="Width"
                        Value="{Binding Path=(local:TabControlHelper.ItemRibbonThickness),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectRibbon"
                        Property="HorizontalAlignment"
                        Value="Left" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Right">
                <Setter TargetName="RectRibbon"
                        Property="Width"
                        Value="{Binding Path=(local:TabControlHelper.ItemRibbonThickness),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="RectRibbon"
                        Property="HorizontalAlignment"
                        Value="Right" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabControlHelper.ItemSelectedRibbonBrush),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="RectRibbon"
                        Property="Fill"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedRibbonBrush),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpHeader"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="CpHeader"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="BtnRemove"
                        Property="Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="IcIcon"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="IcIcon"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="TabItem">
        <!--TabControlHelper-->
        <Setter Property="local:TabControlHelper.ItemSelectedForeground"
                Value="{Binding Path=(local:TabControlHelper.ItemsSelectedForeground), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}" />
        <Setter Property="local:TabControlHelper.ItemSelectedBackground"
                Value="{Binding Path=(local:TabControlHelper.ItemsSelectedBackground), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}" />
        <Setter Property="local:TabControlHelper.ItemSelectedRibbonBrush"
                Value="{Binding Path=(local:TabControlHelper.ItemsSelectedRibbonBrush), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}" />
        <Setter Property="local:TabControlHelper.ItemRemovable"
                Value="{Binding Path=(local:TabControlHelper.ItemsRemovable), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}" />
        <Setter Property="local:TabControlHelper.ItemIcon"
                Value="{Binding Path=(local:TabControlHelper.ItemsIcon), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}" />
        <Setter Property="local:TabControlHelper.ItemRibbonThickness"
                Value="{Binding Path=(local:TabControlHelper.ItemsRibbonThickness), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}" />
        <!--IconHelper-->
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Self}}" />
        
        <Setter Property="Background"
                Value="{Binding Path=(local:TabControlHelper.ItemsBackground), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}" />
        <Setter Property="local:TabControlHelper.ItemForeground"
                Value="{Binding Path=(local:TabControlHelper.ItemsForeground), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}" />
        <Setter Property="Height"
                Value="{Binding Path=(local:TabControlHelper.ItemsHeight), RelativeSource={RelativeSource AncestorType=TabControl}}" />
        <Setter Property="Width"
                Value="{Binding Path=(local:TabControlHelper.ItemsWidth), RelativeSource={RelativeSource AncestorType=TabControl}}" />
        <Setter Property="BorderBrush"
                Value="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}" />
        <Setter Property="Padding"
                Value="{Binding Path=(local:TabControlHelper.ItemsPadding), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static i:ResourceKeys.TabItemStandardTemplate}}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(local:TabControlHelper.TabControlStyle), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}"
                     Value="Card">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static i:ResourceKeys.TabItemCardTemplate}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(local:TabControlHelper.TabControlStyle), RelativeSource={RelativeSource AncestorType=TabControl}, Mode=OneWay}"
                         Value="Modern">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static i:ResourceKeys.TabItemModernTemplate}}" />
            </DataTrigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{StaticResource {x:Static rs:ResourceKeys.DisabledOpacity}}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:TabControlHelper.ItemSelectedBackground),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:TabControlHelper.ItemSelectedBackground),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>
