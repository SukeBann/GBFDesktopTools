<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/InternalResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Resources.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <ControlTemplate x:Key="{x:Static i:ResourceKeys.CheckBoxStandardTemplate}"
                     TargetType="CheckBox">
        <StackPanel Orientation="Horizontal"
                    Background="Transparent"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
            <Grid Height="{Binding Path=(local:CheckBoxHelper.BoxHeight),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                  Width="{Binding Path=(local:CheckBoxHelper.BoxWidth),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}">
                <Rectangle x:Name="RectBoxBorder"
                           Opacity="0.6"
                           Stroke="{TemplateBinding BorderBrush}"
                           StrokeThickness="{Binding BorderThickness, Converter={StaticResource {x:Static i:ResourceKeys.ThicknessToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                           RadiusX="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                           RadiusY="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
                <Rectangle x:Name="RectBoxFill"
                           StrokeThickness="{Binding BorderThickness, Converter={StaticResource {x:Static i:ResourceKeys.ThicknessToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                           Fill="{TemplateBinding Background}"
                           RadiusX="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                           RadiusY="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
                <Rectangle x:Name="RectBoxNull"
                           Fill="{Binding Path=(local:CheckBoxHelper.CheckedGlyphBrush),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                           Height="{Binding Path=(local:CheckBoxHelper.BoxHeight), Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                           Width="{Binding Path=(local:CheckBoxHelper.BoxWidth), Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                           RadiusX="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                           RadiusY="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                           Visibility="Collapsed" />
                <Path x:Name="PathGlyph"
                      Stroke="{Binding Path=(local:CheckBoxHelper.GlyphBrush),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                      StrokeThickness="{Binding BorderThickness, Converter={StaticResource {x:Static i:ResourceKeys.ThicknessToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                      StrokeDashCap="Round">
                    <Path.Data>
                        <MultiBinding Converter="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardGlyphPathConverter}}">
                            <Binding Path="(local:CheckBoxHelper.BoxWidth)"
                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"
                                     Mode="OneWay" />
                            <Binding Path="(local:CheckBoxHelper.BoxHeight)"
                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"
                                     Mode="OneWay" />
                        </MultiBinding>
                    </Path.Data>
                </Path>
                <Path Stroke="{Binding Path=(local:CheckBoxHelper.CheckedGlyphBrush),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                      StrokeThickness="{Binding BorderThickness, Converter={StaticResource {x:Static i:ResourceKeys.ThicknessToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                      StrokeDashCap="Round">
                    <Path.Data>
                        <MultiBinding Converter="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardGlyphPathConverter}}">
                            <Binding Path="(local:CheckBoxHelper.BoxWidth)"
                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"
                                     Mode="OneWay" />
                            <Binding Path="(local:CheckBoxHelper.BoxHeight)"
                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"
                                     Mode="OneWay" />
                        </MultiBinding>
                    </Path.Data>
                    <Path.OpacityMask>
                        <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="1,0">
                            <GradientStop Offset="0"
                                          Color="White" />
                            <GradientStop x:Name="GsCover"
                                          Offset="0"
                                          Color="Transparent" />
                        </LinearGradientBrush>
                    </Path.OpacityMask>
                </Path>
            </Grid>
            <ContentPresenter x:Name="Presenter"
                              RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="Center" />
        </StackPanel>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="RectBoxBorder"
                        Property="Opacity"
                        Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="False" />
                    <Condition Property="IsChecked"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="RectBoxBorder"
                        Property="Opacity"
                        Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="False" />
                    <Condition Property="IsChecked"
                               Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="RectBoxBorder"
                        Property="Opacity"
                        Value="1" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="RectBoxBorder"
                        Property="Opacity"
                        Value="0.6" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="RectBoxBorder"
                        Property="Opacity"
                        Value="0.6" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedBackground), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="RectBoxFill"
                        Property="Fill"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedBackground),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="RectBoxBorder"
                        Property="Stroke"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedGlyphBrush), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="GsCover"
                                             Storyboard.TargetProperty="Offset"
                                             To="1"
                                             Duration="0:0:0.1" />
                            <ColorAnimation Storyboard.TargetName="GsCover"
                                            Storyboard.TargetProperty="Color"
                                            To="White"
                                            Duration="0:0:0.05"
                                            BeginTime="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="GsCover"
                                             Storyboard.TargetProperty="Offset"
                                             Duration="0:0:0.1"
                                             BeginTime="0:0:0.05" />
                            <ColorAnimation Storyboard.TargetName="GsCover"
                                            Storyboard.TargetProperty="Color"
                                            Duration="0:0:0.05" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedContent), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Presenter"
                        Property="Content"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedContent),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            </MultiDataTrigger>
            <Trigger Property="IsChecked"
                     Value="{x:Null}">
                <Setter TargetName="RectBoxNull"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static i:ResourceKeys.CheckBoxSwitchTemplate}"
                     TargetType="CheckBox">
        <StackPanel Orientation="Horizontal"
                    Background="Transparent"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
            <Grid Height="{Binding Path=(local:CheckBoxHelper.BoxHeight),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                  Width="{Binding Path=(local:CheckBoxHelper.BoxWidth),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}">
                <Border x:Name="BdrMain"
                        CornerRadius="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                        Background="{Binding Path=(local:CheckBoxHelper.CheckedBackground), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}">
                    <Rectangle x:Name="RectBoxBack"
                               RadiusX="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                               RadiusY="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                               RenderTransformOrigin="0.5,0.5"
                               Fill="{TemplateBinding Background}">
                        <Rectangle.RenderTransform>
                            <ScaleTransform x:Name="ScaleBoxBack"
                                            ScaleX="1"
                                            ScaleY="1" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                </Border>
                <Rectangle x:Name="EllToggle"
                           Stroke="Transparent"
                           Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                           RadiusX="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                           RadiusY="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                           HorizontalAlignment="Right"
                           Fill="{Binding Path=(local:CheckBoxHelper.GlyphBrush), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}">
                    <Rectangle.Margin>
                        <MultiBinding Converter="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitchToggleMarginConverter}}">
                            <Binding Path="(local:CheckBoxHelper.BoxWidth)"
                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"
                                     Mode="OneWay" />
                            <Binding Path="ActualWidth"
                                     RelativeSource="{RelativeSource Self}"
                                     Mode="OneWay" />
                        </MultiBinding>
                    </Rectangle.Margin>
                    <Rectangle.Effect>
                        <DropShadowEffect Color="DimGray"
                                          Opacity="0.4"
                                          BlurRadius="3"
                                          ShadowDepth="1"
                                          Direction="275" />
                    </Rectangle.Effect>
                </Rectangle>
            </Grid>
            <ContentPresenter x:Name="Presenter"
                              RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="Center" />
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="EllToggle"
                                                Storyboard.TargetProperty="Margin"
                                                To="0"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleX"
                                             To="0"
                                             Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleY"
                                             To="0"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="EllToggle"
                                                Storyboard.TargetProperty="Margin"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleX"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleY"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrMain"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedContent), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Presenter"
                        Property="Content"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedContent),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static i:ResourceKeys.CheckBoxSwitch2Template}"
                     TargetType="CheckBox">
        <StackPanel Orientation="Horizontal"
                    Background="Transparent"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
            <Grid Height="{Binding Path=(local:CheckBoxHelper.BoxHeight),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                  Width="{Binding Path=(local:CheckBoxHelper.BoxWidth),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}">
                <Border x:Name="BdrMain"
                        CornerRadius="{Binding Path=(local:CheckBoxHelper.CornerRadius),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                        Background="{Binding Path=(local:CheckBoxHelper.CheckedBackground), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}">
                    <Rectangle x:Name="RectBoxBack"
                               RadiusX="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                               RadiusY="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                               RenderTransformOrigin="0.5,0.5"
                               Fill="{TemplateBinding Background}">
                        <Rectangle.RenderTransform>
                            <ScaleTransform x:Name="ScaleBoxBack"
                                            ScaleX="1"
                                            ScaleY="1" />
                        </Rectangle.RenderTransform>
                    </Rectangle>
                </Border>
                <Rectangle HorizontalAlignment="Left"
                           Fill="White"
                           Width="3"
                           Margin="{Binding ActualHeight, Converter={StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch2DecorationMarginConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}" />

                <Rectangle x:Name="EllToggle"
                           Stroke="Transparent"
                           Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                           RadiusX="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                           RadiusY="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                           HorizontalAlignment="Right"
                           Fill="{Binding Path=(local:CheckBoxHelper.GlyphBrush), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}">
                    <Rectangle.Margin>
                        <MultiBinding Converter="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitchToggleMarginConverter}}">
                            <Binding Path="(local:CheckBoxHelper.BoxWidth)"
                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"
                                     Mode="OneWay" />
                            <Binding Path="ActualWidth"
                                     RelativeSource="{RelativeSource Self}"
                                     Mode="OneWay" />
                        </MultiBinding>
                    </Rectangle.Margin>
                    <Rectangle.Effect>
                        <DropShadowEffect Color="DimGray"
                                          Opacity="0.4"
                                          BlurRadius="3"
                                          ShadowDepth="1"
                                          Direction="275" />
                    </Rectangle.Effect>
                </Rectangle>
            </Grid>
            <ContentPresenter x:Name="Presenter"
                              RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="Center" />
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="EllToggle"
                                                Storyboard.TargetProperty="Margin"
                                                To="0"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleX"
                                             To="0"
                                             Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleY"
                                             To="0"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="EllToggle"
                                                Storyboard.TargetProperty="Margin"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleX"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="ScaleBoxBack"
                                             Storyboard.TargetProperty="ScaleY"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrMain"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedContent), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Presenter"
                        Property="Content"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedContent),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static i:ResourceKeys.CheckBoxSwitch3Template}"
                     TargetType="CheckBox">
        <StackPanel Orientation="Horizontal"
                    Background="Transparent"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
            <Grid Height="{Binding Path=(local:CheckBoxHelper.BoxHeight),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                  Width="{Binding Path=(local:CheckBoxHelper.BoxWidth),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}">
                <Border x:Name="BdrMain"
                        CornerRadius="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                        Background="{TemplateBinding Background}">
                    <Rectangle x:Name="RectBoxBack"
                               RadiusX="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                               RadiusY="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                               RenderTransformOrigin="0.5,0.5"
                               Fill="{Binding Path=(local:CheckBoxHelper.CheckedBackground), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                               Opacity="0" />
                </Border>
                <Border x:Name="BdrToggleTrack"
                        Margin="{Binding Path=(local:CheckBoxHelper.BoxHeight),Converter={StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch3ToggleTrackMarginConverter}},RelativeSource={RelativeSource AncestorType=CheckBox},Mode=OneWay}">
                    <Rectangle x:Name="EllToggle"
                               Stroke="Transparent"
                               Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               RadiusX="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                               RadiusY="{Binding ActualHeight, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}}"
                               HorizontalAlignment="Right"
                               Fill="{Binding Path=(local:CheckBoxHelper.GlyphBrush), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}">
                        <Rectangle.Margin>
                            <MultiBinding Converter="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch3ToggleMarginConverter}}">
                                <Binding Path="ActualWidth"
                                         ElementName="BdrToggleTrack"
                                         Mode="OneWay" />
                                <Binding Path="ActualWidth"
                                         RelativeSource="{RelativeSource Self}"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </Rectangle.Margin>
                    </Rectangle>
                </Border>
            </Grid>
            <ContentPresenter x:Name="Presenter"
                              RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="Center" />
        </StackPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="EllToggle"
                                                Storyboard.TargetProperty="Margin"
                                                To="0"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="RectBoxBack"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetName="EllToggle"
                                                Storyboard.TargetProperty="Margin"
                                                Duration="0:0:0.3">
                                <ThicknessAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </ThicknessAnimation.EasingFunction>
                            </ThicknessAnimation>
                            <DoubleAnimation Storyboard.TargetName="RectBoxBack"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedGlyphBrush), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="EllToggle"
                        Property="Fill"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedGlyphBrush), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrMain"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedContent), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Presenter"
                        Property="Content"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedContent),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static i:ResourceKeys.CheckBoxButtonTemplate}"
                     TargetType="CheckBox">
        <Grid x:Name="GrdMain"
              Background="Transparent">
            <Rectangle x:Name="RectBack"
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="{Binding BorderThickness, Converter={StaticResource {x:Static i:ResourceKeys.ThicknessToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                       Fill="{TemplateBinding Background}"
                       RadiusX="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                       RadiusY="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            <Rectangle x:Name="RectChecked"
                       Fill="{Binding Path=(local:CheckBoxHelper.CheckedBackground), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                       StrokeThickness="{Binding BorderThickness, Converter={StaticResource {x:Static i:ResourceKeys.ThicknessToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                       RadiusX="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                       RadiusY="{Binding Path=(local:CheckBoxHelper.CornerRadius), Converter={StaticResource {x:Static i:ResourceKeys.CornerRadiusToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                       Opacity="0" />
            <ContentPresenter x:Name="Presenter"
                              RecognizesAccessKey="True"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="RectBack"
                        Property="Stroke"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="RectChecked"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.8"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="RectChecked"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="RectChecked"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.2"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="RectChecked"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter TargetName="RectChecked"
                        Property="Opacity"
                        Value="1" />
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedGlyphBrush),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedContent), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Presenter"
                        Property="Content"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedContent),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static i:ResourceKeys.CheckBoxSelectorTemplate}"
                     TargetType="CheckBox">
        <Grid x:Name="GrdMain"
              Background="Transparent">
            <ContentPresenter x:Name="Presenter"
                              RecognizesAccessKey="True"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center" />
            <Border x:Name="BdrRaw"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    CornerRadius="{Binding Path=(local:CheckBoxHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}">
                <Border x:Name="BdrGlyphRaw"
                        Width="{Binding ActualHeight,RelativeSource={RelativeSource Self},Mode=OneWay}"
                        Height="{Binding ActualHeight, ElementName=BdrChecked, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2.5,Mode=OneWay}"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Right"
                        Background="{TemplateBinding Background}">
                    <Path x:Name="PathGlyphRaw"
                          Stroke="{Binding Path=(local:CheckBoxHelper.GlyphBrush),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                          StrokeThickness="{Binding BorderThickness, Converter={StaticResource {x:Static i:ResourceKeys.ThicknessToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                          StrokeDashCap="Round">
                        <Path.Data>
                            <MultiBinding Converter="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardGlyphPathConverter}}">
                                <Binding Path="ActualWidth"
                                         ElementName="BdrGlyph"
                                         Mode="OneWay" />
                                <Binding Path="ActualHeight"
                                         ElementName="BdrGlyph"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </Path.Data>
                    </Path>
                </Border>
            </Border>
            <Border x:Name="BdrChecked"
                    Opacity="0"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                    CornerRadius="{Binding Path=(local:CheckBoxHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}">
                <Border x:Name="BdrGlyph"
                        Width="{Binding ActualHeight,RelativeSource={RelativeSource Self},Mode=OneWay}"
                        Height="{Binding ActualHeight, ElementName=BdrChecked, Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2.5,Mode=OneWay}"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Right"
                        Background="{Binding Path=(local:CheckBoxHelper.CheckedBackground), RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}">
                    <Path x:Name="PathGlyph"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Stroke="{Binding Path=(local:CheckBoxHelper.CheckedGlyphBrush),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                          StrokeThickness="{Binding BorderThickness, Converter={StaticResource {x:Static i:ResourceKeys.ThicknessToDoubleConverter}}, RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}"
                          StrokeDashCap="Round">
                        <Path.Data>
                            <MultiBinding Converter="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardGlyphPathConverter}}">
                                <Binding Path="ActualWidth"
                                         ElementName="BdrGlyph"
                                         Mode="OneWay" />
                                <Binding Path="ActualHeight"
                                         ElementName="BdrGlyph"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </Path.Data>
                    </Path>
                </Border>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BdrChecked"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.8"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BdrChecked"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                               Value="True" />
                    <Condition Property="IsChecked"
                               Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BdrChecked"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.2"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="BdrChecked"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter TargetName="BdrGlyph"
                        Property="Opacity"
                        Value="1" />
                <Setter TargetName="BdrChecked"
                        Property="Opacity"
                        Value="1" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedContent), Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Presenter"
                        Property="Content"
                        Value="{Binding Path=(local:CheckBoxHelper.CheckedContent),RelativeSource={RelativeSource AncestorType=CheckBox}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="CheckBox">
        <!--Properties-->
        <Setter Property="Background"
                Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardDefaultBackground}}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardDefaultBorderBrush}}" />
        <Setter Property="BorderThickness"
                Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardDefaultBorderThickness}}" />
        <Setter Property="Padding"
                Value="5,0,0,0" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardTemplate}}" />
        <!--CheckBoxHelper-->
        <Setter Property="local:CheckBoxHelper.CornerRadius"
                Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardDefaultCornerRadius}}" />
        <Setter Property="local:CheckBoxHelper.CheckedBackground"
                Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardDefaultCheckedBackground}}" />
        <Setter Property="local:CheckBoxHelper.GlyphBrush"
                Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardDefaultGlyphBrush}}" />
        <Setter Property="local:CheckBoxHelper.CheckedGlyphBrush"
                Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardDefaultCheckedGlyphBrush}}" />
        <Setter Property="local:CheckBoxHelper.CheckedBorderBrush"
                Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardDefaultCheckedBorderBrush}}" />
        <Setter Property="local:CheckBoxHelper.BoxHeight"
                Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardDefaultBoxHeight}}" />
        <Setter Property="local:CheckBoxHelper.BoxWidth"
                Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxStandardDefaultBoxWidth}}" />
        <Style.Triggers>
            <Trigger Property="local:CheckBoxHelper.CheckBoxStyle"
                     Value="Switch">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitchTemplate}}" />
                <Setter Property="Background"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitchDefaultBackground}}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitchDefaultBorderBrush}}" />
                <Setter Property="BorderThickness"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitchDefaultBorderThickness}}" />
                <Setter Property="local:CheckBoxHelper.CornerRadius"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitchDefaultCornerRadius}}" />
                <Setter Property="local:CheckBoxHelper.CheckedBackground"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitchDefaultCheckedBackground}}" />
                <Setter Property="local:CheckBoxHelper.GlyphBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitchDefaultGlyphBrush}}" />
                <Setter Property="local:CheckBoxHelper.CheckedGlyphBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitchDefaultCheckedGlyphBrush}}" />
                <Setter Property="local:CheckBoxHelper.CheckedBorderBrush"
                        Value="{x:Null}" />
                <Setter Property="local:CheckBoxHelper.BoxHeight"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitchDefaultBoxHeight}}" />
                <Setter Property="local:CheckBoxHelper.BoxWidth"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitchDefaultBoxWidth}}" />

            </Trigger>
            <Trigger Property="local:CheckBoxHelper.CheckBoxStyle"
                     Value="Switch2">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch2Template}}" />
                <Setter Property="Background"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch2DefaultBackground}}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch2DefaultBorderBrush}}" />
                <Setter Property="BorderThickness"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch2DefaultBorderThickness}}" />
                <Setter Property="local:CheckBoxHelper.CornerRadius"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch2DefaultCornerRadius}}" />
                <Setter Property="local:CheckBoxHelper.CheckedBackground"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch2DefaultCheckedBackground}}" />
                <Setter Property="local:CheckBoxHelper.GlyphBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch2DefaultGlyphBrush}}" />
                <Setter Property="local:CheckBoxHelper.CheckedGlyphBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch2DefaultCheckedGlyphBrush}}" />
                <Setter Property="local:CheckBoxHelper.CheckedBorderBrush"
                        Value="{x:Null}" />
                <Setter Property="local:CheckBoxHelper.BoxHeight"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch2DefaultBoxHeight}}" />
                <Setter Property="local:CheckBoxHelper.BoxWidth"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch2DefaultBoxWidth}}" />
            </Trigger>
            <Trigger Property="local:CheckBoxHelper.CheckBoxStyle"
                     Value="Switch3">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch3Template}}" />
                <Setter Property="Background"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch3DefaultBackground}}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch3DefaultBorderBrush}}" />
                <Setter Property="BorderThickness"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch3DefaultBorderThickness}}" />
                <Setter Property="local:CheckBoxHelper.CornerRadius"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch3DefaultCornerRadius}}" />
                <Setter Property="local:CheckBoxHelper.CheckedBackground"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch3DefaultCheckedBackground}}" />
                <Setter Property="local:CheckBoxHelper.GlyphBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch3DefaultGlyphBrush}}" />
                <Setter Property="local:CheckBoxHelper.CheckedGlyphBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch3DefaultCheckedGlyphBrush}}" />
                <Setter Property="local:CheckBoxHelper.CheckedBorderBrush"
                        Value="{x:Null}" />
                <Setter Property="local:CheckBoxHelper.BoxHeight"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch3DefaultBoxHeight}}" />
                <Setter Property="local:CheckBoxHelper.BoxWidth"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSwitch3DefaultBoxWidth}}" />
            </Trigger>
            <Trigger Property="local:CheckBoxHelper.CheckBoxStyle"
                     Value="Button">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxButtonTemplate}}" />
                <Setter Property="Background"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxButtonDefaultBackground}}" />
                <Setter Property="BorderBrush"
                        Value="{x:Null}" />
                <Setter Property="BorderThickness"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxButtonDefaultBorderThickness}}" />
                <Setter Property="local:CheckBoxHelper.CornerRadius"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxButtonDefaultCornerRadius}}" />
                <Setter Property="local:CheckBoxHelper.CheckedBackground"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxButtonDefaultCheckedBackground}}" />
                <Setter Property="local:CheckBoxHelper.GlyphBrush"
                        Value="{x:Null}" />
                <Setter Property="local:CheckBoxHelper.CheckedGlyphBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxButtonDefaultCheckedGlyphBrush}}" />
                <Setter Property="local:CheckBoxHelper.CheckedBorderBrush"
                        Value="{x:Null}" />
                <Setter Property="Height"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxButtonDefaultBoxHeight}}" />
                <Setter Property="Width"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxButtonDefaultBoxWidth}}" />
            </Trigger>
            <Trigger Property="local:CheckBoxHelper.CheckBoxStyle"
                     Value="Selector">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSelectorTemplate}}" />
                <Setter Property="Background"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSelectorDefaultBackground}}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSelectorDefaultBorderBrush}}" />
                <Setter Property="BorderThickness"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSelectorDefaultBorderThickness}}" />
                <Setter Property="local:CheckBoxHelper.CornerRadius"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSelectorDefaultCornerRadius}}" />
                <Setter Property="local:CheckBoxHelper.CheckedBackground"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSelectorDefaultCheckedBackground}}" />
                <Setter Property="local:CheckBoxHelper.GlyphBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSelectorDefaultGlyphBrush}}" />
                <Setter Property="local:CheckBoxHelper.CheckedGlyphBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSelectorDefaultCheckedGlyphBrush}}" />
                <Setter Property="local:CheckBoxHelper.CheckedBorderBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSelectorDefaultCheckedBorderBrush}}" />
                <Setter Property="Height"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSelectorDefaultBoxHeight}}" />
                <Setter Property="Width"
                        Value="{StaticResource {x:Static i:ResourceKeys.CheckBoxSelectorDefaultBoxWidth}}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{StaticResource {x:Static rs:ResourceKeys.DisabledOpacity}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
