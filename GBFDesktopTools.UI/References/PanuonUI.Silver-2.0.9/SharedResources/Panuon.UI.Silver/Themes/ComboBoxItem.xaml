<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/InternalResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Resources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Themes/Button.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Static rs:ResourceKeys.ComboBoxItemRemoveButtonStyle}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontFamily"
                Value="pack://application:,,,/Panuon.UI.Silver;component/Resources/#PanuonIcon" />
        <Setter Property="Content"
                Value="&#xe92d;" />
        <Setter Property="local:ButtonHelper.ButtonStyle"
                Value="Link" />
        <Setter Property="Width"
                Value="{Binding ActualHeight,Converter={StaticResource {x:Static rs:Converters.DoubleMinusConverter}}, ConverterParameter=5,RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}" />
        <Setter Property="Height"
                Value="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}" />
        <Style.Triggers>
            <Trigger Property="local:ButtonHelper.ButtonStyle"
                     Value="Link">
                <Setter Property="Foreground"
                        Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=TextBox},Mode=OneWay}" />
                <Setter Property="local:ButtonHelper.HoverBrush"
                        Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{x:Static i:ResourceKeys.ComboBoxItemTemplate}"
                     TargetType="ComboBoxItem">
        <Border x:Name="BdrMain"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}">
            <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Presenter"
                                  Margin="{TemplateBinding Padding}" />
                <Button x:Name="BtnRemove"
                        Grid.Column="1"
                        Foreground="{TemplateBinding Foreground}"
                        Visibility="{Binding Path=(local:ComboBoxHelper.ItemRemovable),Converter={StaticResource {x:Static rs:Converters.TrueToVisibleConverter}},RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                        Margin="0,0,5,0"
                        Style="{DynamicResource {x:Static rs:ResourceKeys.ComboBoxItemRemoveButtonStyle}}"
                        Command="{Binding Path=(local:ComboBoxHelper.RemoveCommand), RelativeSource={RelativeSource AncestorType=ComboBoxItem}, Mode=OneWay}">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{StaticResource {x:Static i:ResourceKeys.CombineToArrayConverter}}">
                            <Binding Path="."
                                     RelativeSource="{RelativeSource AncestorType=ComboBoxItem}" />
                            <Binding Path="."
                                     RelativeSource="{RelativeSource AncestorType=ComboBox}" />
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ComboBoxHelper.ItemSelectedBackground),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrMain"
                        Property="Background"
                        Value="{Binding Path=(local:ComboBoxHelper.ItemSelectedBackground),RelativeSource={RelativeSource AncestorType=ComboBoxItem}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ComboBoxHelper.ItemSelectedBorderBrush),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BdrMain"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:ComboBoxHelper.ItemSelectedBorderBrush),RelativeSource={RelativeSource AncestorType=ComboBoxItem}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition  Binding="{Binding Path=(local:ComboBoxHelper.ItemSelectedForeground),Converter={StaticResource {x:Static i:ResourceKeys.IsNotNullConverter}},RelativeSource={RelativeSource Self}}"
                                Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="Presenter"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:ComboBoxHelper.ItemSelectedForeground),RelativeSource={RelativeSource AncestorType=ComboBoxItem}, Mode=OneWay}" />
                <Setter TargetName="Presenter"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:ComboBoxHelper.ItemSelectedForeground),RelativeSource={RelativeSource AncestorType=ComboBoxItem}, Mode=OneWay}" />
                <Setter TargetName="BtnRemove"
                        Property="Foreground"
                        Value="{Binding Path=(local:ComboBoxHelper.ItemSelectedForeground),RelativeSource={RelativeSource AncestorType=ComboBoxItem}, Mode=OneWay}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ComboBoxItem">
        <Setter Property="local:ComboBoxHelper.ItemRemovable"
                Value="{Binding Path=(local:ComboBoxHelper.ItemsRemovable), RelativeSource={RelativeSource AncestorType=ComboBox}}" />
        <Setter Property="local:ComboBoxHelper.ItemHoverBackground"
                Value="{Binding Path=(local:ComboBoxHelper.ItemsHoverBackground), RelativeSource={RelativeSource AncestorType=ComboBox}}" />
        <Setter Property="local:ComboBoxHelper.ItemHoverForeground"
                Value="{Binding Path=(local:ComboBoxHelper.ItemsHoverForeground), RelativeSource={RelativeSource AncestorType=ComboBox}}" />
        <Setter Property="local:ComboBoxHelper.ItemHoverBorderBrush"
                Value="{Binding Path=(local:ComboBoxHelper.ItemsHoverBorderBrush), RelativeSource={RelativeSource AncestorType=ComboBox}}" />
        <Setter Property="local:ComboBoxHelper.ItemSelectedBackground"
                Value="{Binding Path=(local:ComboBoxHelper.ItemsSelectedBackground), RelativeSource={RelativeSource AncestorType=ComboBox}}" />
        <Setter Property="local:ComboBoxHelper.ItemSelectedForeground"
                Value="{Binding Path=(local:ComboBoxHelper.ItemsSelectedForeground), RelativeSource={RelativeSource AncestorType=ComboBox}}" />
        <Setter Property="local:ComboBoxHelper.ItemSelectedBorderBrush"
                Value="{Binding Path=(local:ComboBoxHelper.ItemsSelectedBorderBrush), RelativeSource={RelativeSource AncestorType=ComboBox}}" />
        <Setter Property="Height"
                Value="{Binding Path=(local:ComboBoxHelper.ItemsHeight), RelativeSource={RelativeSource AncestorType=ComboBox}}" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static i:ResourceKeys.ComboBoxItemTemplate}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{StaticResource {x:Static rs:ResourceKeys.DisabledOpacity}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
