<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/InternalResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Resources.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="{x:Static i:ResourceKeys.DropDownToggleButtonTemplate}"
                     TargetType="ToggleButton">
        <Grid Background="Transparent">
            <ContentPresenter />
            <Border Background="Transparent" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Static i:ResourceKeys.DropDownToggleButtonStyle}"
           TargetType="ToggleButton">
        <Setter Property="Template"
                Value="{StaticResource {x:Static i:ResourceKeys.DropDownToggleButtonTemplate}}" />
    </Style>

    <ControlTemplate x:Key="{x:Static i:ResourceKeys.DropDownStandardTemplate}"
                     TargetType="local:DropDown">
        <Grid>
            <ToggleButton x:Name="TgbContent"
                          Style="{TemplateBinding ContentContainerStyle}"
                          IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                          Content="{TemplateBinding Content}"
                          ContentTemplate="{TemplateBinding ContentTemplate}"
                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
            <local:PopupX x:Name="PopDropDown"
                          StaysOpen="{TemplateBinding StaysOpen}"
                          IsOpen="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                          Placement="{TemplateBinding Placement}"
                          PartnerElement="{Binding ElementName=TgbContent}"
                          AllowsTransparency="True"
                          Focusable="False"
                          PopupAnimation="Slide">
                <Grid Margin="5,0,5,5">
                    <Path x:Name="PathDropDown"
                          Fill="{TemplateBinding Background}"
                          Stroke="{TemplateBinding BorderBrush}"
                          StrokeThickness="{Binding BorderThickness,Converter={StaticResource {x:Static i:ResourceKeys.ThicknessToDoubleConverter}},RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                          Effect="{Binding ShadowColor, Converter={StaticResource {x:Static i:ResourceKeys.NullableColorToShadowEffectConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                          Margin="0.5">
                        <Path.Data>
                            <MultiBinding Converter="{StaticResource {x:Static i:ResourceKeys.DropDownPathDataConverter}}">
                                <Binding Path="ActualWidth"
                                         ElementName="PathDropDown"
                                         Mode="OneWay" />
                                <Binding Path="ActualHeight"
                                         ElementName="PathDropDown"
                                         Mode="OneWay" />
                                <Binding Path="CornerRadius"
                                         RelativeSource="{RelativeSource AncestorType=local:DropDown}"
                                         Mode="OneWay" />
                                <Binding Path="ActualPlacement"
                                         ElementName="PopDropDown"
                                         Mode="OneWay" />
                                <Binding Path="DropDownStyle"
                                         RelativeSource="{RelativeSource AncestorType=local:DropDown}"
                                         Mode="OneWay" />
                                <Binding Path="Margin"
                                         ElementName="PathDropDown"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </Path.Data>
                        
                    </Path>
                    <ContentPresenter x:Name="CpChild"
                                      Margin="5"
                                      ContentSource="Child"
                                      ContentTemplate="{TemplateBinding ChildTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ChildTemplateSelector}" />
                </Grid>

            </local:PopupX>
        </Grid>
    </ControlTemplate>

    <Style TargetType="local:DropDown">
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="CornerRadius"
                Value="2" />
        <Setter Property="ShadowColor"
                Value="#EEEEEE" />
        <Setter Property="ContentContainerStyle"
                Value="{StaticResource {x:Static i:ResourceKeys.DropDownToggleButtonStyle}}" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static i:ResourceKeys.DropDownStandardTemplate}}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{StaticResource {x:Static rs:ResourceKeys.DisabledOpacity}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
