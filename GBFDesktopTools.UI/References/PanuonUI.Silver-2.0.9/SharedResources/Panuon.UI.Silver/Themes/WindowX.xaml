<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:i="clr-namespace:Panuon.UI.Silver.Internal"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/InternalResources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Resources.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Themes/Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Themes/Loading.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Static rs:ResourceKeys.WindowXMinimizeButtonStyle}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontFamily"
                Value="pack://application:,,,/Panuon.UI.Silver;component/Resources/#PanuonIcon" />
        <Setter Property="Content"
                Value="&#xe92a;" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Height"
                Value="{Binding Path=(local:WindowXCaption.Height),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
        <Setter Property="Width"
                Value="{Binding Path=(local:WindowXCaption.Height),Converter={StaticResource {x:Static rs:Converters.DoublePlusConverter}}, ConverterParameter=5,RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
        <Setter Property="MaxHeight"
                Value="35" />
        <Setter Property="MaxWidth"
                Value="40" />
        <Setter Property="local:ButtonHelper.ButtonStyle"
                Value="Hollow" />
        <Style.Triggers>
            <Trigger Property="local:ButtonHelper.ButtonStyle"
                     Value="Hollow">
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="local:ButtonHelper.HoverBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.WindowXCaptionMinimizeButtonHoverBrush}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="{x:Static rs:ResourceKeys.WindowXMaximizeButtonStyle}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontFamily"
                Value="pack://application:,,,/Panuon.UI.Silver;component/Resources/#PanuonIcon" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Content"
                Value="&#xe92b;" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Height"
                Value="{Binding Path=(local:WindowXCaption.Height),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
        <Setter Property="Width"
                Value="{Binding Path=(local:WindowXCaption.Height),Converter={StaticResource {x:Static rs:Converters.DoublePlusConverter}}, ConverterParameter=5,RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
        <Setter Property="MaxHeight"
                Value="35" />
        <Setter Property="MaxWidth"
                Value="40" />
        <Setter Property="local:ButtonHelper.ButtonStyle"
                Value="Hollow" />
        <Style.Triggers>
            <Trigger Property="local:ButtonHelper.ButtonStyle"
                     Value="Hollow">
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="local:ButtonHelper.HoverBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.WindowXCaptionMaximizeButtonHoverBrush}}" />
            </Trigger>
            <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}, Mode=OneWay}"
                         Value="Maximized">
                <Setter Property="Content"
                        Value="&#xe92c;" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Static rs:ResourceKeys.WindowXCloseButtonStyle}"
           TargetType="Button"
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FontFamily"
                Value="pack://application:,,,/Panuon.UI.Silver;component/Resources/#PanuonIcon" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Content"
                Value="&#xe92d;" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Height"
                Value="{Binding Path=(local:WindowXCaption.Height),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
        <Setter Property="Width"
                Value="{Binding Path=(local:WindowXCaption.Height),Converter={StaticResource {x:Static rs:Converters.DoublePlusConverter}}, ConverterParameter=5,RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
        <Setter Property="MaxHeight"
                Value="35" />
        <Setter Property="MaxWidth"
                Value="40" />
        <Setter Property="local:ButtonHelper.ButtonStyle"
                Value="Hollow" />
        <Style.Triggers>
            <Trigger Property="local:ButtonHelper.ButtonStyle"
                     Value="Hollow">
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="local:ButtonHelper.HoverBrush"
                        Value="{StaticResource {x:Static i:ResourceKeys.WindowXCaptionCloseButtonHoverBrush}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{x:Static i:ResourceKeys.WindowXTemplate}"
                     TargetType="{x:Type local:WindowX}">
        <Border 
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid x:Name="GrdMain">
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Path=(local:WindowXCaption.Height), Converter={StaticResource {x:Static i:ResourceKeys.GridLengthConverter}}, RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <AdornerDecorator Grid.Row="1"
                                  Grid.ColumnSpan="5">
                    <ContentPresenter />
                </AdornerDecorator>
                <Rectangle Fill="{Binding Path=(local:WindowXCaption.Background),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}"
                           Grid.ColumnSpan="5" />
                <ContentControl x:Name="CcHeader"
                                Foreground="{Binding Path=(local:WindowXCaption.Foreground),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}"
                                Content="{Binding Path=(local:WindowXCaption.Header),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
                <ContentControl x:Name="CcExtendControl"
                                local:WindowX.IsDragMoveArea="False"
                                Grid.Column="1"
                                Content="{Binding Path=(local:WindowXCaption.ExtendControl),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
                <ContentControl x:Name="CcBackstage"
                                local:WindowX.IsDragMoveArea="False"
                                Visibility="Collapsed"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="5"
                                Content="{TemplateBinding Backstage}" />
                <Button x:Name="BtnMinimize"
                        local:WindowX.IsDragMoveArea="False"
                        Grid.Column="2"
                        Command="{TemplateBinding MinimizeCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{Binding Path=(local:WindowXCaption.MinimizeButtonStyle),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
                <Button x:Name="BtnMaximize"
                        local:WindowX.IsDragMoveArea="False"
                        Grid.Column="3"
                        Command="{TemplateBinding MaximizeCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{Binding Path=(local:WindowXCaption.MaximizeButtonStyle),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
                <Button x:Name="BtnClose"
                        local:WindowX.IsDragMoveArea="False"
                        Grid.Column="4"
                        Command="{TemplateBinding CloseCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        IsEnabled="{Binding Path=(local:WindowXCaption.DisableCloseButton), Converter={StaticResource {x:Static rs:Converters.TrueToFalseConverter}}, RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}"
                        Style="{Binding Path=(local:WindowXCaption.CloseButtonStyle),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
                <Rectangle x:Name="RectMask"
                           Grid.RowSpan="2"
                           Grid.ColumnSpan="5"
                           Fill="{TemplateBinding MaskBrush}"
                           Opacity="0"
                           Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEscEnabled"
                     Value="True">
                <Setter TargetName="BtnClose"
                        Property="IsCancel"
                        Value="True" />
            </Trigger>
            <Trigger Property="ResizeMode"
                     Value="CanMinimize">
                <Setter TargetName="BtnMaximize"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="ResizeMode"
                     Value="NoResize">
                <Setter TargetName="BtnMaximize"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="BtnMinimize"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsBackstageVisible"
                     Value="True">
                <Setter TargetName="CcBackstage"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="CcHeader"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="CcExtendControl"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="BtnMinimize"
                        Property="Style"
                        Value="{Binding Path=(local:WindowXCaption.BackstageMinimizeButtonStyle),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
                <Setter TargetName="BtnMaximize"
                        Property="Style"
                        Value="{Binding Path=(local:WindowXCaption.BackstageMaximizeButtonStyle),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
                <Setter TargetName="BtnClose"
                        Property="Style"
                        Value="{Binding Path=(local:WindowXCaption.BackstageCloseButtonStyle),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
            </Trigger>
            <Trigger Property="IsMaskVisible"
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RectMask"
                                                           Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                        Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetName="RectMask"
                                             Storyboard.TargetProperty="Opacity"
                                             From="0"
                                             To="1"
                                             Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RectMask"
                                                           Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1"
                                                        Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetName="RectMask"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>

                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="local:WindowXCaption.HorizontalHeaderAlignment"
                     Value="Stretch">
                <Setter TargetName="CcHeader"
                        Property="Grid.ColumnSpan"
                        Value="5" />
            </Trigger>
            <Trigger Property="local:WindowXCaption.HorizontalHeaderAlignment"
                     Value="Center">
                <Setter TargetName="CcHeader"
                        Property="Grid.ColumnSpan"
                        Value="5" />
                <Setter TargetName="CcHeader"
                        Property="HorizontalAlignment"
                        Value="Center" />
            </Trigger>
            <Trigger Property="WindowState"
                     Value="Maximized">
                <Setter TargetName="GrdMain"
                        Property="Margin"
                        Value="5" />
            </Trigger>
            <Trigger Property="local:WindowXCaption.HideBasicButtons"
                     Value="True">
                <Setter TargetName="BtnMinimize"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="BtnMaximize"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="BtnClose"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static i:ResourceKeys.WindowXToolWindowTemplate}"
                     TargetType="local:WindowX">
        <Border 
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid x:Name="GrdMain">
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Path=(local:WindowXCaption.Height), Converter={StaticResource {x:Static i:ResourceKeys.GridLengthConverter}}, RelativeSource={RelativeSource AncestorType=local:WindowX}, Mode=OneWay}" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <AdornerDecorator Grid.Row="1"
                                  Grid.ColumnSpan="3">
                    <ContentPresenter />
                </AdornerDecorator>
                <Rectangle Fill="{Binding Path=(local:WindowXCaption.Background),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" 
                           Grid.ColumnSpan="3"/>
                <ContentControl x:Name="CcHeader"
                                Foreground="{Binding Path=(local:WindowXCaption.Foreground),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}"
                                Content="{Binding Path=(local:WindowXCaption.Header),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
                <ContentControl x:Name="CcExtendControl"
                                local:WindowX.IsDragMoveArea="False"
                                Grid.Column="1"
                                Content="{Binding Path=(local:WindowXCaption.ExtendControl),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
                <ContentControl x:Name="CcBackstage"
                                local:WindowX.IsDragMoveArea="False"
                                Visibility="Collapsed"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="3"
                                Content="{TemplateBinding Backstage}" />
                <Button x:Name="BtnClose"
                        local:WindowX.IsDragMoveArea="False"
                        Grid.Column="2"
                        Command="{TemplateBinding CloseCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                        IsEnabled="{Binding Path=(local:WindowXCaption.DisableCloseButton), Converter={StaticResource {x:Static rs:Converters.TrueToFalseConverter}},RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}"
                        Style="{Binding Path=(local:WindowXCaption.CloseButtonStyle),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
                <Rectangle x:Name="RectMask"
                           Grid.RowSpan="2"
                           Grid.ColumnSpan="3"
                           Fill="{TemplateBinding MaskBrush}"
                           Opacity="0"
                           Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEscEnabled"
                     Value="True">
                <Setter TargetName="BtnClose"
                        Property="IsCancel"
                        Value="True" />
            </Trigger>
            <Trigger Property="IsBackstageVisible"
                     Value="True">
                <Setter TargetName="CcBackstage"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="CcHeader"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="CcExtendControl"
                        Property="Visibility"
                        Value="Collapsed" />
                <Setter TargetName="BtnClose"
                        Property="Style"
                        Value="{Binding Path=(local:WindowXCaption.BackstageCloseButtonStyle),RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
            </Trigger>
            <Trigger Property="local:WindowXCaption.HideBasicButtons"
                     Value="True">
                <Setter TargetName="BtnClose"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsMaskVisible"
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RectMask"
                                                           Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                        Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetName="RectMask"
                                             Storyboard.TargetProperty="Opacity"
                                             From="0"
                                             To="1"
                                             Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RectMask"
                                                           Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1"
                                                        Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetName="RectMask"
                                             Storyboard.TargetProperty="Opacity"
                                             Duration="0:0:0.1" />
                        </Storyboard>
                    </BeginStoryboard>

                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="local:WindowXCaption.HorizontalHeaderAlignment"
                     Value="Stretch">
                <Setter TargetName="CcHeader"
                        Property="Grid.ColumnSpan"
                        Value="3" />
            </Trigger>
            <Trigger Property="local:WindowXCaption.HorizontalHeaderAlignment"
                     Value="Center">
                <Setter TargetName="CcHeader"
                        Property="Grid.ColumnSpan"
                        Value="3" />
                <Setter TargetName="CcHeader"
                        Property="HorizontalAlignment"
                        Value="Center" />
            </Trigger>
            <Trigger Property="WindowState"
                     Value="Maximized">
                <Setter TargetName="GrdMain"
                        Property="Margin"
                        Value="5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <StackPanel  x:Key="{x:Static i:ResourceKeys.WindowXDefaultHeader}"
                 x:Shared="False"
                 Orientation="Horizontal"
                 local:WindowX.IsDragMoveArea="True"
                 VerticalAlignment="Center">
        <Image Margin="5,0,0,0"
               MaxHeight="25"
               MaxWidth="25"
               RenderOptions.BitmapScalingMode="HighQuality"
               VerticalAlignment="Center"
               Source="{Binding Icon,RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
        <TextBlock Margin="5,0,0,0"
                   VerticalAlignment="Center"
                   Text="{Binding Title,RelativeSource={RelativeSource AncestorType=local:WindowX},Mode=OneWay}" />
    </StackPanel>

    <Style x:Key="{x:Static i:ResourceKeys.WindowXStyle}"
           TargetType="local:WindowX">
        <Setter Property="FontFamily"
                Value="{Binding Source={x:Static i:GlobalHelper.FontFamily}}" />
        <Setter Property="FontSize"
                Value="{Binding Source={x:Static i:GlobalHelper.FontSize}}" />
        <Setter Property="Background"
                Value="#FFFFFF" />
        <Setter Property="Foreground"
                Value="#3E3E3E" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="MaskBrush"
                Value="#B3000000" />
        <Setter Property="local:WindowXCaption.Background"
                Value="{StaticResource {x:Static i:ResourceKeys.WindowXCaptionBackground}}" />
        <Setter Property="local:WindowXCaption.Foreground"
                Value="{StaticResource {x:Static i:ResourceKeys.WindowXCaptionForeground}}" />
        <Setter Property="local:WindowXCaption.Height"
                Value="{StaticResource {x:Static i:ResourceKeys.WindowXCaptionHeight}}" />
        <Setter Property="local:WindowXCaption.HorizontalHeaderAlignment"
                Value="{StaticResource {x:Static i:ResourceKeys.WindowXCaptionHorizontalHeaderAlignment}}" />
        <Setter Property="local:WindowXCaption.MinimizeButtonStyle"
                Value="{StaticResource {x:Static rs:ResourceKeys.WindowXMinimizeButtonStyle}}" />
        <Setter Property="local:WindowXCaption.MaximizeButtonStyle"
                Value="{StaticResource {x:Static rs:ResourceKeys.WindowXMaximizeButtonStyle}}" />
        <Setter Property="local:WindowXCaption.CloseButtonStyle"
                Value="{StaticResource {x:Static rs:ResourceKeys.WindowXCloseButtonStyle}}" />
        <Setter Property="local:WindowXCaption.BackstageMinimizeButtonStyle"
                Value="{Binding Path=(local:WindowXCaption.MinimizeButtonStyle), RelativeSource={RelativeSource Self}}" />
        <Setter Property="local:WindowXCaption.BackstageMaximizeButtonStyle"
                Value="{Binding Path=(local:WindowXCaption.MaximizeButtonStyle), RelativeSource={RelativeSource Self}}" />
        <Setter Property="local:WindowXCaption.BackstageCloseButtonStyle"
                Value="{Binding Path=(local:WindowXCaption.CloseButtonStyle), RelativeSource={RelativeSource Self}}" />
        <Setter Property="local:WindowXCaption.Header"
                Value="{StaticResource {x:Static i:ResourceKeys.WindowXDefaultHeader}}" />
        <Setter Property="Template"
                Value="{StaticResource {x:Static i:ResourceKeys.WindowXTemplate}}" />
        <Style.Triggers>
            <Trigger Property="WindowStyle"
                     Value="ToolWindow">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static i:ResourceKeys.WindowXToolWindowTemplate}}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="{StaticResource {x:Static rs:ResourceKeys.DisabledOpacity}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
