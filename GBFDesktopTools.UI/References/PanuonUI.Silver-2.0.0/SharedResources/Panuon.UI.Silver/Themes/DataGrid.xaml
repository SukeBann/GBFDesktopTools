<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Silver.Core"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}"
           TargetType="Button">
        <Setter Property="Background"
                Value="{Binding Path=(local:DataGridHelper.RowHeaderBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle VerticalAlignment="Bottom"
                                   Height="1"
                                   Fill="{Binding HorizontalGridLinesBrush, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"/>
                        <Rectangle HorizontalAlignment="Right"
                                   Width="1"
                                   Fill="{Binding Path=(local:DataGridHelper.HeaderVerticalGridLinesBrush), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                        <Rectangle x:Name="RectCover"
                                   Fill="#0A000000"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="RectCover"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.HeaderHoverBackground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.HeaderHoverBackground), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="DataGridRow">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="MinHeight"
                Value="{Binding MinRowHeight,RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRow">
                    <Border Background="{TemplateBinding Background}">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridRowHeader x:Name="DgrhHeader"
                                               Grid.RowSpan="2"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row},  Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                            <DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter Grid.Column="1"
                                                      Grid.Row="1"
                                                      Visibility="{TemplateBinding DetailsVisibility}"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Mode=OneWay}" />
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RowHeaderWidth, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                                     Value="0">
                            <Setter TargetName="DgrhHeader"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="FullRow" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitHoverBackground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="False" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.UnitHoverBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="FullRow" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitSelectedBackground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.UnitSelectedBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle x:Name="RectHighlight"
                                   Stroke="{Binding Path=(local:DataGridHelper.CellFocusedHightlightBorderBrush), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <ContentPresenter x:Name="CpContent"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Margin="{Binding Path=(local:DataGridHelper.UnitPadding),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(local:DataGridHelper.CellFocusedHightlightBorderBrush), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="RectHighlight"
                                    Property="Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="Cell" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitHoverBackground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.UnitHoverBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="Cell" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitSelectedBackground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.UnitSelectedBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="CellOrRowHeader" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitSelectedBackground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.UnitSelectedBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(local:DataGridHelper.UnitSelectedForeground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:DataGridHelper.UnitSelectedForeground), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Padding"
                Value="{Binding Path=(local:DataGridHelper.HeaderPadding),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
        <Setter Property="Background"
                Value="{Binding Path=(local:DataGridHelper.HeaderBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
        <Setter Property="Foreground"
                Value="{Binding Path=(local:DataGridHelper.HeaderForeground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
        <Setter Property="Height"
                Value="{Binding ColumnHeaderHeight,RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=(local:DataGridHelper.HorizontalHeaderAlignment), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid>
                        <Grid Background="{TemplateBinding Background}">
                            <Rectangle x:Name="RectBottom"
                                       Height="1"
                                       VerticalAlignment="Bottom"
                                       Fill="{Binding HorizontalGridLinesBrush, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"/>
                            <Rectangle x:Name="RectRight"
                                       Width="1"
                                       Margin="-0.5,0,0,0"
                                       HorizontalAlignment="Right"
                                       Fill="{Binding Path=(local:DataGridHelper.HeaderVerticalGridLinesBrush), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                                       />
                            <Rectangle x:Name="RectCover"
                                       Fill="#0A000000"
                                       Visibility="Collapsed" />
                        </Grid>
                        <Grid Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="CpContent"
                                              ContentSource="Content" />
                            <TextBlock x:Name="TxtAsc"
                                       Grid.Column="1"
                                       Margin="3,0,-3,0"
                                       Text="&#xe901;"
                                       Visibility="Collapsed"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                                       FontFamily="pack://application:,,,/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon" />
                            <TextBlock x:Name="TxtDesc"
                                       Grid.Column="1"
                                       Margin="3,0,-3,0"
                                       Text="&#xe903;"
                                       Visibility="Collapsed"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                                       FontFamily="pack://application:,,,/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon" />
                        </Grid>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               Cursor="SizeWE"
                               Width="{Binding Path=(local:DataGridHelper.ResizeThumbThickness),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}">
                            <Thumb.Style>
                                <Style TargetType="Thumb">
                                    <Setter Property="Background"
                                            Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Thumb">
                                                <Rectangle Fill="{TemplateBinding Background}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                        <Thumb x:Name="PART_RightHeaderGripper"
                               HorizontalAlignment="Right"
                               Cursor="SizeWE"
                               Width="{Binding Path=(local:DataGridHelper.ResizeThumbThickness),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}">
                            <Thumb.Style>
                                <Style TargetType="Thumb">
                                    <Setter Property="Background"
                                            Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Thumb">
                                                <Rectangle Fill="{TemplateBinding Background}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  Property="CanUserSort"
                                            Value="True" />
                                <Condition  Property="SortDirection"
                                            Value="Ascending" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TxtAsc"
                                    Property="Visibility"
                                    Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  Property="CanUserSort"
                                            Value="True" />
                                <Condition  Property="SortDirection"
                                            Value="Descending" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TxtDesc"
                                    Property="Visibility"
                                    Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="RectCover"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(local:DataGridHelper.HeaderGridLinesVisibility), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                                     Value="None">
                            <Setter TargetName="RectRight"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="RectBottom"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(local:DataGridHelper.HeaderGridLinesVisibility), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                                     Value="Horizontal">
                            <Setter TargetName="RectRight"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(local:DataGridHelper.HeaderGridLinesVisibility), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                                     Value="Vertical">
                            <Setter TargetName="RectBottom"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.HeaderHoverBackground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.HeaderHoverBackground), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.HeaderHoverForeground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:DataGridHelper.HeaderHoverForeground), RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{x:Static irs:ResourceKeys.DataGridScrollViewerTemplate}"
                     TargetType="ScrollViewer">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Button x:Name="BtnSelectAll"
                    Focusable="False"
                    Command="{x:Static DataGrid.SelectAllCommand}"
                    Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                    Width="{Binding RowHeaderWidth, Converter={StaticResource {x:Static rs:Converters.DoubleMinusConverter}}, ConverterParameter=0.5, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Mode=OneWay}" />
            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                            Grid.Column="1"
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                    Grid.ColumnSpan="2"
                                    Grid.Row="1"
                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
            <ScrollBar x:Name="PART_VerticalScrollBar"
                       Grid.Column="2"
                       Grid.Row="1"
                       Orientation="Vertical"
                       ViewportSize="{TemplateBinding ViewportHeight}"
                       Maximum="{TemplateBinding ScrollableHeight}"
                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                       Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            <Grid Grid.Column="1"
                  Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                          RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ScrollBar x:Name="PART_HorizontalScrollBar"
                           Grid.Column="1"
                           Orientation="Horizontal"
                           ViewportSize="{TemplateBinding ViewportWidth}"
                           Maximum="{TemplateBinding ScrollableWidth}"
                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                           Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RowHeaderWidth,RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                         Value="0">
                <Setter TargetName="BtnSelectAll"
                        Property="Visibility"
                        Value="Collapsed" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="DataGridRowHeader">
        <Setter Property="Background"
                Value="{Binding Path=(local:DataGridHelper.RowHeaderBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRowHeader">
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle Height="1"
                                   VerticalAlignment="Bottom"
                                   Fill="{Binding HorizontalGridLinesBrush, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                        <Rectangle Width="1"
                                   HorizontalAlignment="Right"
                                   Fill="{Binding VerticalGridLinesBrush, RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
                        <ContentPresenter />
                        <Control SnapsToDevicePixels="False"
                                 Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                 Visibility="{Binding (Validation.HasError), Converter={StaticResource TrueToVisibleConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                        <Thumb x:Name="PART_TopHeaderGripper"
                               VerticalAlignment="Top"
                               Cursor="SizeNS"
                               Height="{Binding Path=(local:DataGridHelper.ResizeThumbThickness),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}">
                            <Thumb.Style>
                                <Style TargetType="Thumb">
                                    <Setter Property="Background"
                                            Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Thumb">
                                                <Rectangle Fill="{TemplateBinding Background}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                        <Thumb x:Name="PART_BottomHeaderGripper"
                               Cursor="SizeNS"
                               Height="{Binding Path=(local:DataGridHelper.ResizeThumbThickness),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               VerticalAlignment="Bottom">
                            <Thumb.Style>
                                <Style TargetType="Thumb">
                                    <Setter Property="Background"
                                            Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Thumb">
                                                <Rectangle Fill="{TemplateBinding Background}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:DataGridHelper.RowHeaderHoverBackground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:DataGridHelper.RowHeaderHoverBackground),RelativeSource={RelativeSource AncestorType=DataGrid}, Mode=OneWay}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGrid"
           x:Key="{x:Static irs:StyleKeys.DataGridStyle}">
        <Setter Property="local:DataGridHelper.DataGridHook"
                Value="True" />
        <Setter Property="local:DataGridHelper.HeaderBackground"
                Value="Transparent" />
        <Setter Property="local:DataGridHelper.HeaderVerticalGridLinesBrush"
                Value="{Binding VerticalGridLinesBrush, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DataGridHelper.HeaderForeground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DataGridHelper.HeaderPadding"
                Value="10,0" />
        <Setter Property="local:DataGridHelper.UnitPadding"
                Value="5,0" />
        <Setter Property="ColumnHeaderHeight"
                Value="30" />
        <Setter Property="MinRowHeight"
                Value="30" />
        <Setter Property="local:DataGridHelper.HorizontalHeaderAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DataGridHelper.HeaderHoverBackground"
                Value="#FAFAFA" />
        <Setter Property="local:DataGridHelper.UnitSelectedForeground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:DataGridHelper.UnitHoverBackground"
                Value="#FAFAFA" />
        <Setter Property="local:DataGridHelper.UnitSelectedBackground"
                Value="#EAEAEA" />
        <Setter Property="local:DataGridHelper.RowHeaderBackground"
                Value="White" />
        <Setter Property="local:DataGridHelper.RowHeaderHoverBackground"
                Value="#FAFAFA" />
        <Setter Property="local:DataGridHelper.ResizeThumbThickness"
                Value="2" />
        <Setter Property="local:DataGridHelper.CellFocusedHightlightBorderBrush"
                Value="LightGray" />
        <Setter Property="HorizontalGridLinesBrush"
                Value="LightGray" />
        <Setter Property="VerticalGridLinesBrush"
                Value="LightGray" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="RowHeaderWidth"
                Value="10" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGrid">
                    <Border x:Name="BdrMain"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Template="{StaticResource {x:Static irs:ResourceKeys.DataGridScrollViewerTemplate}}"
                                      Focusable="False"
                                      Padding="{TemplateBinding Padding}"
                                      VerticalScrollBarVisibility="{Binding Path=(ScrollViewer.VerticalScrollBarVisibility),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      HorizontalScrollBarVisibility="{Binding Path=(ScrollViewer.HorizontalScrollBarVisibility),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      CanContentScroll="{Binding Path=(ScrollViewer.CanContentScroll),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
