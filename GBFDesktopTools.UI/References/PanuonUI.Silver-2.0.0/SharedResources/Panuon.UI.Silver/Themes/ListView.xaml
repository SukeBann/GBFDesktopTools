<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Silver.Core"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="{x:Type GridViewColumnHeader}"
           TargetType="GridViewColumnHeader">
        <Setter Property="Padding"
                Value="{Binding Path=(local:ListViewHelper.HeaderPadding),RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}" />
        <Setter Property="Background"
                Value="{Binding Path=(local:ListViewHelper.HeaderBackground),RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}" />
        <Setter Property="Foreground"
                Value="{Binding Path=(local:ListViewHelper.HeaderForeground),RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=(local:ListViewHelper.HeaderHorizontalContentAlignment), RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Grid Background="{TemplateBinding Background}">
                            <Rectangle x:Name="RectBottom"
                                       Height="1"
                                       VerticalAlignment="Bottom"
                                       Fill="{Binding Path=(local:ListViewHelper.HeaderHorizontalSeparatorBrush), RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}" />
                            <Rectangle x:Name="RectRight"
                                       Width="1"
                                       HorizontalAlignment="Right"
                                       Fill="{Binding Path=(local:ListViewHelper.HeaderVerticalSeparatorBrush), RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}" />
                            <Rectangle x:Name="RectCover"
                                       Fill="#0A000000"
                                       Visibility="Collapsed" />
                        </Grid>
                        <ContentPresenter x:Name="CpContent"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          ContentSource="Content" />
                        <Thumb x:Name="PART_HeaderGripper"
                               HorizontalAlignment="Right"
                               Cursor="SizeWE"
                               Width="{Binding Path=(local:ListViewHelper.ResizeThumbThickness),RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}">
                            <Thumb.Style>
                                <Style TargetType="Thumb">
                                    <Setter Property="Background"
                                            Value="Transparent" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Thumb">
                                                <Rectangle Fill="{TemplateBinding Background}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(local:ListViewHelper.HeaderSeparatorVisibility),RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}"
                                     Value="None">
                            <Setter TargetName="RectBottom"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="RectRight"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(local:ListViewHelper.HeaderSeparatorVisibility),RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}"
                                     Value="Horizontal">
                            <Setter TargetName="RectRight"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(local:ListViewHelper.HeaderSeparatorVisibility),RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}"
                                     Value="Vertical">
                            <Setter TargetName="RectBottom"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </DataTrigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="RectCover"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.HeaderHoverBackground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:ListViewHelper.HeaderHoverBackground), RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.HeaderHoverForeground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:ListViewHelper.HeaderHoverForeground), RelativeSource={RelativeSource AncestorType=ListView}, Mode=OneWay}" />
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
           TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Focusable="false">
                                <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                                            Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    CanContentScroll="True"
                                                    CanHorizontallyScroll="False"
                                                    CanVerticallyScroll="False" />
                        </DockPanel>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Orientation="Vertical"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.ColumnSpan="2"
                                   Grid.Row="1"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="{x:Static irs:StyleKeys.ListViewStyle}" 
            TargetType="{x:Type ListView}">
        <Setter Property="local:ScrollViewerHelper.ScrollBarThickness"
                Value="6" />
        <Setter Property="local:ScrollViewerHelper.ScrollBarCornerRadius"
                Value="3" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="local:ScrollViewerHelper.ScrollBarThickness"
                Value="6" />
        <Setter Property="local:ScrollViewerHelper.ScrollBarCornerRadius"
                Value="3" />
        <Setter Property="local:ListViewHelper.HeaderHorizontalContentAlignment"
                Value="Left" />
        <Setter Property="Foreground"
                Value="#3E3E3E" />
        <Setter Property="local:ListViewHelper.HeaderPadding"
                Value="10" />
        <Setter Property="local:ListViewHelper.HeaderBackground"
                Value="Transparent" />
        <Setter Property="local:ListViewHelper.HeaderForeground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="local:ListViewHelper.ResizeThumbThickness"
                Value="2" />
        <Setter Property="local:ListViewHelper.ItemsHoverBackground"
                Value="#FAFAFA" />
        <Setter Property="local:ListViewHelper.ItemsSelectedBackground"
                Value="#F1F1F1" />
        <Setter Property="local:ListViewHelper.ItemsBackground"
                Value="Transparent" />
        <Setter Property="local:ListViewHelper.ItemsForeground"
                Value="#3E3E3E" />
        <Setter Property="local:ListViewHelper.ItemsBorderBrush"
                Value="{x:Null}" />
        <Setter Property="local:ListViewHelper.ItemsCornerRadius"
                Value="0" />
        <Setter Property="local:ListViewHelper.ItemsHeight"
                Value="30" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing"
                Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode"
                Value="Recycling" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="local:ListViewHelper.HeaderHorizontalSeparatorBrush"
                Value="LightGray" />
        <Setter Property="local:ListViewHelper.HeaderVerticalSeparatorBrush"
                Value="LightGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="BdrMain"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Focusable="False"
                                      Padding="{TemplateBinding Padding}"
                                      VerticalScrollBarVisibility="{Binding Path=(ScrollViewer.VerticalScrollBarVisibility),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      HorizontalScrollBarVisibility="{Binding Path=(ScrollViewer.HorizontalScrollBarVisibility),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      CanContentScroll="{Binding Path=(ScrollViewer.CanContentScroll),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Style="{StaticResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>

                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping"
                     Value="true">
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="local:ListViewHelper.ItemCornerRadius"
                Value="{Binding Path=(local:ListViewHelper.ItemsCornerRadius), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemHoverBackground"
                Value="{Binding Path=(local:ListViewHelper.ItemsHoverBackground), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemHoverBorderBrush"
                Value="{Binding Path=(local:ListViewHelper.ItemsHoverBorderBrush), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemHoverForeground"
                Value="{Binding Path=(local:ListViewHelper.ItemsHoverForeground), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemSelectedBackground"
                Value="{Binding Path=(local:ListViewHelper.ItemsSelectedBackground), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemSelectedBorderBrush"
                Value="{Binding Path=(local:ListViewHelper.ItemsSelectedBorderBrush), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemSelectedForeground"
                Value="{Binding Path=(local:ListViewHelper.ItemsSelectedForeground), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="local:ListViewHelper.ItemIcon"
                Value="{Binding Path=(local:ListViewHelper.ItemsIcon), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="Foreground"
                Value="{Binding Path=(local:ListViewHelper.ItemsForeground), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="Background"
                Value="{Binding Path=(local:ListViewHelper.ItemsBackground), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="BorderBrush"
                Value="{Binding Path=(local:ListViewHelper.ItemsBorderBrush), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="Height"
                Value="{Binding Path=(local:ListViewHelper.ItemsHeight), RelativeSource={RelativeSource AncestorType=ListView}}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="BdrMain"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding Path=(local:ListViewHelper.ItemCornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <GridViewRowPresenter Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.ItemHoverForeground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:ListViewHelper.ItemHoverForeground),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.ItemHoverBackground), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:ListViewHelper.ItemHoverBackground),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.ItemHoverBorderBrush), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush"
                        Value="{Binding Path=(local:ListViewHelper.ItemHoverBorderBrush),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.ItemSelectedBackground), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:ListViewHelper.ItemSelectedBackground),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.ItemSelectedForeground), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:ListViewHelper.ItemSelectedForeground),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ListViewHelper.ItemSelectedBorderBrush), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush"
                        Value="{Binding Path=(local:ListViewHelper.ItemSelectedBorderBrush),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
