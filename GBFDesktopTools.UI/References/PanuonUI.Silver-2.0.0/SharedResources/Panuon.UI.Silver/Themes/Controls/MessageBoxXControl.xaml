<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:com="clr-namespace:Panuon.UI.Silver.Components"
                    xmlns:core="clr-namespace:Panuon.UI.Silver.Core"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=ButtonStyle, TypeInTargetAssembly={x:Type com:MessageBoxXControl}}"
           TargetType="Button">
        <Setter Property="local:ButtonHelper.Hook"
                Value="True" />
        <Setter Property="Margin"
                Value="5,0,0,0" />
        <Setter Property="Background"
                Value="#F1F1F1" />
        <Setter Property="local:ButtonHelper.HoverBackground"
                Value="#FAFAFA" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="local:ButtonHelper.CornerRadius"
                Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="{Binding Path=(local:ButtonHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <ContentPresenter Margin="15,0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsDefault"
                     Value="True">
                <Setter Property="Background"
                        Value="#DCDCDC" />
                <Setter Property="local:ButtonHelper.HoverBackground"
                        Value="#E1E1E1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static irs:StyleKeys.MessageBoxXControlStyle}"
           TargetType="com:MessageBoxXControl">
        <Setter Property="MaxContentHeight"
                Value="100" />
        <Setter Property="MaxContentWidth"
                Value="400" />
        <Setter Property="Padding"
                Value="15" />
        <Setter Property="ButtonStyle"
                Value="{StaticResource {ComponentResourceKey ResourceId=ButtonStyle, TypeInTargetAssembly={x:Type com:MessageBoxXControl}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="com:MessageBoxXControl">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition  Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <com:MessageBoxXIconControl FontSize="40"
                                                        Margin="0,0,20,0"
                                                        MessageBoxIcon="{TemplateBinding Icon}" />
                            <ScrollViewer Grid.Column="1"
                                          Focusable="False"
                                          MaxHeight="{TemplateBinding MaxContentHeight}"
                                          MaxWidth="{TemplateBinding MaxContentWidth}"
                                          VerticalScrollBarVisibility="Auto"
                                          HorizontalScrollBarVisibility="Disabled">
                                <TextBlock Text="{TemplateBinding Message}"
                                           VerticalAlignment="Center"
                                           TextWrapping="Wrap" />
                            </ScrollViewer>
                        </Grid>
                        <StackPanel x:Name="StkButtonGroup"
                                    Grid.Row="1"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Right">
                            <Button x:Name="PART_YesButton"
                                    Style="{TemplateBinding ButtonStyle}" />
                            <Button x:Name="PART_NoButton"
                                    Style="{TemplateBinding ButtonStyle}" />
                            <Button x:Name="PART_OKButton"
                                    Style="{TemplateBinding ButtonStyle}" />
                            <Button x:Name="PART_CancelButton"
                                    Style="{TemplateBinding ButtonStyle}" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ButtonArrangement"
                                 Value="Reverse">
                            <Setter TargetName="StkButtonGroup"
                                    Property="FlowDirection"
                                    Value="RightToLeft" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
