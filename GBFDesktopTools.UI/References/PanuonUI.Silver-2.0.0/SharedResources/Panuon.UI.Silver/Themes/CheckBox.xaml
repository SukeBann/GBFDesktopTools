<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Silver.Core"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Static irs:StyleKeys.CheckBoxStyle}"
           TargetType="CheckBox">
        <Setter Property="Padding"
                Value="5,0,0,0" />
        <Setter Property="BorderBrush"
                Value="Gray" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="local:CheckBoxHelper.CheckedGlyphBrush"
                Value="#3E3E3E" />
        <Setter Property="local:CheckBoxHelper.NullableGlyphBrush"
                Value="#3E3E3E" />
        <Setter Property="local:CheckBoxHelper.BoxHeight"
                Value="16" />
        <Setter Property="local:CheckBoxHelper.BoxWidth"
                Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal"
                                Background="Transparent"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                        <Grid Height="{Binding Path=(local:CheckBoxHelper.BoxHeight),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                              Width="{Binding Path=(local:CheckBoxHelper.BoxWidth),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                            <Border x:Name="BdrBoxBorder"
                                    Opacity="0.6"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding Path=(local:CheckBoxHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                            <Border x:Name="BdrBoxFill"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="{Binding Path=(local:CheckBoxHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                            <Border x:Name="BrdBoxNull"
                                    Background="{Binding Path=(local:CheckBoxHelper.NullableGlyphBrush),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    Height="{Binding Path=(local:CheckBoxHelper.BoxHeight), Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    Width="{Binding Path=(local:CheckBoxHelper.BoxWidth), Converter={StaticResource {x:Static rs:Converters.DoubleDivideByConverter}}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    CornerRadius="{Binding Path=(local:CheckBoxHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    Visibility="Collapsed" />
                            <TextBlock x:Name="TxtGlyph"
                                       Text="&#xe92e;"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       FontFamily="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon"
                                       Foreground="{Binding Path=(local:CheckBoxHelper.GlyphBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                       FontSize="{Binding Path=(local:CheckBoxHelper.BoxWidth), Converter={StaticResource {x:Static rs:Converters.DoubleMinusConverter}}, ConverterParameter=3, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        </Grid>
                        <ContentPresenter x:Name="CpContent"
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BdrBoxBorder"
                                    Property="Opacity"
                                    Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="False" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BdrBoxBorder"
                                    Property="Opacity"
                                    Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="False" />
                                <Condition Property="IsChecked"
                                           Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BdrBoxBorder"
                                    Property="Opacity"
                                    Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BdrBoxBorder"
                                    Property="Opacity"
                                    Value="0.6" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="IsChecked"
                                           Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BdrBoxBorder"
                                    Property="Opacity"
                                    Value="0.6" />
                        </MultiTrigger>
                        <Trigger Property="IsChecked"
                                 Value="{x:Null}">
                            <Setter TargetName="BrdBoxNull"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self},Mode=OneWay}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedGlyphBrush), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter  TargetName="TxtGlyph"
                                     Property="Foreground"
                                     Value="{Binding Path=(local:CheckBoxHelper.CheckedGlyphBrush),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedForeground), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CpContent"
                                    Property="TextElement.Foreground"
                                     Value="{Binding Path=(local:CheckBoxHelper.CheckedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                            <Setter TargetName="CpContent"
                                    Property="TextBlock.Foreground"
                                    Value="{Binding Path=(local:CheckBoxHelper.CheckedForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedContent), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CpContent"
                                    Property="Content"
                                    Value="{Binding Path=(local:CheckBoxHelper.CheckedContent),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedBackground), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BdrBoxFill"
                                     Property="Background"
                                     Value="{Binding Path=(local:CheckBoxHelper.CheckedBackground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self},Mode=OneWay}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BdrBoxBorder"
                                    Property="BorderBrush"
                                    Value="{Binding Path=(local:CheckBoxHelper.CheckedBorderBrush),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
