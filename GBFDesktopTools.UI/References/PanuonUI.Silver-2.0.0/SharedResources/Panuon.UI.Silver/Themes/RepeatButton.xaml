<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Silver.Core"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style  x:Key="{x:Static irs:StyleKeys.RepeatButtonStyle}"
            TargetType="RepeatButton">
        <Setter Property="local:RepeatButtonHelper.Hook"
                Value="True" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="#F1F1F1" />
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.Margin"
                Value="0,0,5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border x:Name="BdrMain"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding Path=(local:RepeatButtonHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <StackPanel x:Name="StkContent"
                                    Orientation="Horizontal"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <ic:IconControl x:Name="icIcon"
                                            Content="{Binding Path=(local:RepeatButtonHelper.Icon), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                            Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                            <ContentPresenter x:Name="CpContent"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="BdrMain"
                                    Property="Opacity"
                                    Value="0.8" />
                        </Trigger>
                        <Trigger Property="local:RepeatButtonHelper.IconPlacement"
                                 Value="Top">
                            <Setter TargetName="StkContent"
                                    Property="Orientation"
                                    Value="Vertical" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed"
                                           Value="True" />
                                <Condition Property="local:RepeatButtonHelper.ClickStyle"
                                           Value="Sink" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BdrMain"
                                    Property="Margin"
                                    Value="0,1,0,-1" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="local:RepeatButtonHelper.IsWaiting"
                     Value="True">
                <Setter Property="IsEnabled"
                        Value="False" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <local:Loading Width="{Binding FontSize, Converter={StaticResource {x:Static rs:Converters.DoublePlusConverter}}, ConverterParameter=5, RelativeSource={RelativeSource AncestorType=RepeatButton}, Mode=OneWay}"
                                               Height="{Binding FontSize, Converter={StaticResource {x:Static rs:Converters.DoublePlusConverter}}, ConverterParameter=5, RelativeSource={RelativeSource AncestorType=RepeatButton}, Mode=OneWay}"
                                               Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=RepeatButton}, Mode=OneWay}"
                                               IsLoading="True"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center" />
                                <ContentControl Margin="5,0,0,0"
                                                Content="{Binding Content, RelativeSource={RelativeSource AncestorType=RepeatButton}, Mode=OneWay}"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center" />
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:RepeatButtonHelper.IsWaiting"
                               Value="False" />
                    <Condition Property="IsEnabled"
                               Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Opacity"
                        Value="0.4" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
