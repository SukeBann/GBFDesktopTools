<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Silver.Core"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Static irs:ResourceKeys.PasswordBoxClearButtonStyle}"
           TargetType="Button">
        <Setter Property="local:ButtonHelper.Hook"
                Value="True" />
        <Setter Property="Visibility"
                Value="{Binding Path=(local:TextBoxHelper.CanClear), Converter={StaticResource {x:Static rs:Converters.TrueToVisibleConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter Property="Content"
                Value="&#xe92d;" />
        <Setter Property="Margin"
                Value="0,0,8,0" />
        <Setter Property="FontSize"
                Value="{Binding FontSize, Converter={StaticResource {x:Static rs:Converters.DoublePlusConverter}}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter Property="FontFamily"
                Value="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static irs:ResourceKeys.PasswordBoxPlainButtonStyle}"
           TargetType="Button">
        <Setter Property="local:ButtonHelper.Hook"
                Value="True" />
        <Setter Property="Visibility"
                Value="{Binding Path=(local:PasswordBoxHelper.CanPlain), Converter={StaticResource {x:Static rs:Converters.TrueToVisibleConverter}}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter Property="Content"
                Value="&#xe94b;" />
        <Setter Property="Margin"
                Value="0,0,8,0" />
        <Setter Property="FontSize"
                Value="{Binding FontSize, Converter={StaticResource {x:Static rs:Converters.DoublePlusConverter}}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
        <Setter Property="FontFamily"
                Value="/Panuon.UI.Silver;component/Resources/Fonts/#PanuonIcon" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Content"
                        Value="&#xe94c;" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static irs:StyleKeys.PasswordBoxStyle}"
           TargetType="PasswordBox">
        <Setter Property="local:PasswordBoxHelper.Hook"
                Value="True" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Padding"
                Value="5,0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="local:IconHelper.Margin"
                Value="10,0,0,0" />
        <Setter Property="local:IconHelper.FontSize"
                Value="{Binding FontSize, Converter={StaticResource {x:Static rs:Converters.DoublePlusConverter}}, ConverterParameter=2, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="BdrBack"
                                Grid.ColumnSpan="4"
                                SnapsToDevicePixels="False"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{Binding Path=(local:PasswordBoxHelper.CornerRadius),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}">
                            <Border.Effect>
                                <DropShadowEffect x:Name="DseShadow"
                                                  ShadowDepth="0"
                                                  BlurRadius="5"
                                                  Opacity="0"
                                                  Color="{Binding Path=(local:PasswordBoxHelper.FocusedShadowColor), Converter={StaticResource {x:Static irs:Converters.NullableColorToColorConverter}},RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                            </Border.Effect>
                        </Border>
                        <ic:IconControl Content="{Binding Path=(local:PasswordBoxHelper.Icon), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                        Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        <TextBlock  x:Name="TxtWatermark"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    Padding="1,0,0,0"
                                    IsHitTestVisible="False"
                                    Visibility="{Binding Path=(local:PasswordBoxHelper.Password),Converter={StaticResource {x:Static irs:Converters.StringNullOrEmptyToVisibleConverter}},RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                    Text="{Binding Path=(local:PasswordBoxHelper.Watermark),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Opacity="0.5" />
                        <TextBlock  x:Name="TxtPassword"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    Padding="1,0,0,0"
                                    IsHitTestVisible="False"
                                    Text="{Binding Path=(local:PasswordBoxHelper.Password),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Visibility="Collapsed"/>
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Grid.Column="1"
                                      VerticalAlignment="Stretch"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        <Button Grid.Column="2"
                                Style="{StaticResource {x:Static irs:ResourceKeys.PasswordBoxClearButtonStyle}}"
                                Foreground="{TemplateBinding Foreground}"
                                Command="{Binding Path=(local:PasswordBoxHelper.ClearPasswordBoxCommand),RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                                CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
                        <Button x:Name="BtnPlain"
                                Grid.Column="3"
                                Style="{StaticResource {x:Static irs:ResourceKeys.PasswordBoxPlainButtonStyle}}"
                                Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="BtnPlain"
                                 Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="PART_ContentHost"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="TxtPassword"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <Trigger Property="local:PasswordBoxHelper.FocusedShadowColor"
                                 Value="{x:Null}">
                            <Setter TargetName="BdrBack"
                                    Property="Effect"
                                    Value="{x:Null}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                           Value="True" />
                                <Condition Binding="{Binding Path=(local:PasswordBoxHelper.FocusedShadowColor), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DseShadow"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DseShadow"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:PasswordBoxHelper.FocusedCaretBrush), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="CaretBrush"
                        Value="{Binding Path=(local:PasswordBoxHelper.FocusedCaretBrush),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="0.4" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(local:Validator.ValidationErrorTips), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                         Value="True">
                <Setter Property="BorderBrush"
                        Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
