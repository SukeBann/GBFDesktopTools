<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI.Silver"
                    xmlns:core="clr-namespace:Panuon.UI.Silver.Core"
                    xmlns:irs="clr-namespace:Panuon.UI.Silver.Internal.Resources"
                    xmlns:rs="clr-namespace:Panuon.UI.Silver.Resources"
                    xmlns:ic="clr-namespace:Panuon.UI.Silver.Internal.Controls">
    <ResourceDictionary.MergedDictionaries>
        <core:SharedResourceDictionary Source="pack://application:,,,/Panuon.UI.Silver;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style  x:Key="{x:Static irs:StyleKeys.ListBoxStyle}"
            TargetType="{x:Type ListBox}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Disabled" />
        <Setter Property="local:ListBoxHelper.ItemsHoverBackground"
                Value="#FAFAFA" />
        <Setter Property="local:ListBoxHelper.ItemsSelectedBackground"
                Value="#F1F1F1" />
        <Setter Property="local:ListBoxHelper.ItemsBackground"
                Value="Transparent" />
        <Setter Property="local:ListBoxHelper.ItemsForeground"
                Value="#3E3E3E" />
        <Setter Property="local:ListBoxHelper.ItemsHeight"
                Value="NaN" />
        <Setter Property="local:ListBoxHelper.ItemsWidth"
                Value="NaN" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing"
                Value="True" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode"
                Value="Recycling" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="BdrMain"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Focusable="False"
                                      Padding="{TemplateBinding Padding}"
                                      VerticalScrollBarVisibility="{Binding Path=(ScrollViewer.VerticalScrollBarVisibility),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      HorizontalScrollBarVisibility="{Binding Path=(ScrollViewer.HorizontalScrollBarVisibility),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      CanContentScroll="{Binding Path=(ScrollViewer.CanContentScroll),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping"
                     Value="True">
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="False" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="local:ListBoxHelper.ItemCornerRadius"
                Value="{Binding Path=(local:ListBoxHelper.ItemsCornerRadius), RelativeSource={RelativeSource AncestorType=ListBox}, Mode=OneWay}" />
        <Setter Property="local:ListBoxHelper.ItemHoverBackground"
                Value="{Binding Path=(local:ListBoxHelper.ItemsHoverBackground), RelativeSource={RelativeSource AncestorType=ListBox}, Mode=OneWay}" />
        <Setter Property="local:ListBoxHelper.ItemHoverBorderBrush"
                Value="{Binding Path=(local:ListBoxHelper.ItemsHoverBorderBrush), RelativeSource={RelativeSource AncestorType=ListBox}, Mode=OneWay}" />
        <Setter Property="local:ListBoxHelper.ItemHoverForeground"
                Value="{Binding Path=(local:ListBoxHelper.ItemsHoverForeground), RelativeSource={RelativeSource AncestorType=ListBox}, Mode=OneWay}" />
        <Setter Property="local:ListBoxHelper.ItemSelectedBackground"
                Value="{Binding Path=(local:ListBoxHelper.ItemsSelectedBackground), RelativeSource={RelativeSource AncestorType=ListBox}, Mode=OneWay}" />
        <Setter Property="local:ListBoxHelper.ItemSelectedBorderBrush"
                Value="{Binding Path=(local:ListBoxHelper.ItemsSelectedBorderBrush), RelativeSource={RelativeSource AncestorType=ListBox}, Mode=OneWay}" />
        <Setter Property="local:ListBoxHelper.ItemSelectedForeground"
                Value="{Binding Path=(local:ListBoxHelper.ItemsSelectedForeground), RelativeSource={RelativeSource AncestorType=ListBox}, Mode=OneWay}" />
        <Setter Property="local:ListBoxHelper.ItemIcon"
                Value="{Binding Path=(local:ListBoxHelper.ItemsIcon), RelativeSource={RelativeSource AncestorType=ListBox}, Mode=OneWay}" />
        <Setter Property="Foreground"
                Value="{Binding Path=(local:ListBoxHelper.ItemsForeground), RelativeSource={RelativeSource AncestorType=ListBox}, Mode=OneWay}" />
        <Setter Property="Background"
                Value="{Binding Path=(local:ListBoxHelper.ItemsBackground), RelativeSource={RelativeSource AncestorType=ListBox}, Mode=OneWay}" />
        <Setter Property="BorderBrush"
                Value="{Binding Path=(local:ListBoxHelper.ItemsBorderBrush), RelativeSource={RelativeSource AncestorType=ListBox}, Mode=OneWay}" />
        <Setter Property="Height"
                Value="{Binding Path=(local:ListBoxHelper.ItemsHeight), RelativeSource={RelativeSource AncestorType=ListBox}, Mode=OneWay}" />
        <Setter Property="Width"
                Value="{Binding Path=(local:ListBoxHelper.ItemsWidth), RelativeSource={RelativeSource AncestorType=ListBox}, Mode=OneWay}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="local:IconHelper.Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding Path=(local:ListBoxHelper.ItemCornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:ListBoxHelper.ItemHoverForeground),Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:ListBoxHelper.ItemHoverForeground),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:ListBoxHelper.ItemHoverBackground), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:ListBoxHelper.ItemHoverBackground),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="False" />
                    <Condition Binding="{Binding Path=(local:ListBoxHelper.ItemHoverBorderBrush), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush"
                        Value="{Binding Path=(local:ListBoxHelper.ItemHoverBorderBrush),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ListBoxHelper.ItemSelectedBackground), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background"
                        Value="{Binding Path=(local:ListBoxHelper.ItemSelectedBackground),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ListBoxHelper.ItemSelectedForeground), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{Binding Path=(local:ListBoxHelper.ItemSelectedForeground),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected,RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:ListBoxHelper.ItemSelectedBorderBrush), Converter={StaticResource {x:Static rs:Converters.IsNotNullConverter}},RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="BorderBrush"
                        Value="{Binding Path=(local:ListBoxHelper.ItemSelectedBorderBrush),RelativeSource={RelativeSource Self}, Mode=OneWay}" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
